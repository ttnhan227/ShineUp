@model IEnumerable<Client.Models.PostListViewModel>

@{
    ViewData["Title"] = "Posts";
}

<div class="container-fluid">
    <div class="row">
        <!-- Left Sidebar -->
        <div class="col-md-3">
            <div class="card newsfeed-user-card h-100">
                <div class="card-body">
                    <h5 class="card-title mb-4">
                        <i class='bx bx-category'></i> Categories
                    </h5>
                    <div class="category-list">
                        <a href="@Url.Action("Index", "Posts")" class="category-item @(ViewBag.SelectedCategory == null ? "active" : "")">
                            <i class='bx bx-grid-alt'></i> All Posts
                        </a>
                        @foreach (var category in ViewBag.Categories ?? new List<SelectListItem>())
                        {
                            <a href="@Url.Action("CategoryPosts", "Posts", new { categoryId = category.Value })" 
                               class="category-item @(ViewBag.SelectedCategory?.ToString() == category.Value ? "active" : "")">
                                <i class='bx bx-category'></i> @category.Text
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="col-md-9">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>Posts</h2>
                @if (User.Identity.IsAuthenticated)
                {
                    <a asp-action="Create" class="btn btn-primary">
                        <i class='bx bx-plus'></i> Create New Post
                    </a>
                }
            </div>

            <div class="row">
                @foreach (var item in Model)
                {
                    <div class="col-md-6 mb-4">
                        <div class="card h-100 post-card">
                            @if (item.MediaFiles != null && item.MediaFiles.Any())
                            {
                                <div class="media-grid">
                                    @if (item.MediaFiles.Count == 1)
                                    {
                                        var media = item.MediaFiles[0];
                                        <div class="media-item single">
                                            @if (media.Type == "image")
                                            {
                                                <img src="@media.Url" class="card-img-top post-image" alt="@item.Title">
                                            }
                                            else if (media.Type == "video")
                                            {
                                                <div class="video-container">
                                                    <video controls preload="metadata">
                                                        <source src="@media.Url" type="video/mp4">
                                                        Your browser does not support the video tag.
                                                    </video>
                                                    <div class="video-overlay">
                                                        <i class='bx bx-play-circle'></i>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="media-grid-container @(GetGridClass(item.MediaFiles.Count))">
                                            @foreach (var media in item.MediaFiles.Take(4))
                                            {
                                                <div class="media-item @(item.MediaFiles.Count > 4 && media == item.MediaFiles[3] ? "overlay" : "")">
                                                    @if (media.Type == "image")
                                                    {
                                                        <img src="@media.Url" alt="@item.Title">
                                                    }
                                                    else if (media.Type == "video")
                                                    {
                                                        <div class="video-container">
                                                            <video controls preload="metadata">
                                                                <source src="@media.Url" type="video/mp4">
                                                                Your browser does not support the video tag.
                                                            </video>
                                                            <div class="video-overlay">
                                                                <i class='bx bx-play-circle'></i>
                                                            </div>
                                                        </div>
                                                    }
                                                </div>
                                            }
                                            @if (item.MediaFiles.Count > 4)
                                            {
                                                <div class="media-count-overlay">
                                                    +@(item.MediaFiles.Count - 4)
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                            }
                            <div class="card-body">
                                <h5 class="card-title">@item.Title</h5>
                                <p class="card-text">@(item.Content.Length > 150 ? item.Content.Substring(0, 150) + "..." : item.Content)</p>
                                
                                <div class="post-meta">
                                    <div class="d-flex align-items-center mb-2">
                                        <i class='bx bx-user'></i>
                                        <span class="ms-2">@item.UserName</span>
                                    </div>
                                    <div class="d-flex align-items-center mb-2">
                                        <i class='bx bx-time'></i>
                                        <span class="ms-2">@item.CreatedAt.ToString("MMM dd, yyyy")</span>
                                    </div>
                                    @if (!string.IsNullOrEmpty(item.CategoryName))
                                    {
                                        <div class="d-flex align-items-center mb-2">
                                            <i class='bx bx-category'></i>
                                            <span class="ms-2">@item.CategoryName</span>
                                        </div>
                                    }
                                </div>

                                <div class="post-stats">
                                    <span class="me-3">
                                        <i class='bx bx-heart'></i> @item.LikesCount
                                    </span>
                                    <span>
                                        <i class='bx bx-comment'></i> @item.CommentsCount
                                    </span>
                                </div>
                            </div>
                            <div class="card-footer">
                                <a asp-action="Details" asp-route-id="@item.PostID" class="btn btn-primary btn-sm">
                                    <i class='bx bx-show'></i> Read More
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link href='https://cdn.jsdelivr.net/npm/boxicons@1.9.2/css/boxicons.min.css' rel='stylesheet'>
    <style>
        .newsfeed-user-card {
            border: none;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            border-radius: 15px;
            overflow: hidden;
        }

        .category-list {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .category-item {
            display: flex;
            align-items: center;
            padding: 0.75rem 1rem;
            color: #525f7f;
            text-decoration: none;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .category-item:hover {
            background-color: #f8f9fa;
            color: #5e72e4;
        }

        .category-item.active {
            background-color: #5e72e4;
            color: white;
        }

        .category-item i {
            margin-right: 0.5rem;
            font-size: 1.2rem;
        }

        .post-card {
            border: none;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            border-radius: 15px;
            overflow: hidden;
            transition: transform 0.3s ease;
        }

        .post-card:hover {
            transform: translateY(-5px);
        }

        .media-grid {
            width: 100%;
            background: #f8f9fa;
        }

        .media-item {
            position: relative;
            width: 100%;
            height: 0;
            padding-bottom: 56.25%; /* 16:9 aspect ratio */
            overflow: hidden;
        }

        .media-item img,
        .media-item video {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .media-grid-container {
            display: grid;
            gap: 2px;
            background: #f8f9fa;
        }

        /* Grid layouts for different numbers of media items */
        .media-grid-container.grid-2 {
            grid-template-columns: repeat(2, 1fr);
            grid-template-rows: repeat(1, 1fr);
        }

        .media-grid-container.grid-3 {
            grid-template-columns: repeat(2, 1fr);
            grid-template-rows: repeat(2, 1fr);
        }

        .media-grid-container.grid-3 .media-item:first-child {
            grid-column: 1 / -1;
        }

        .media-grid-container.grid-4 {
            grid-template-columns: repeat(2, 1fr);
            grid-template-rows: repeat(2, 1fr);
        }

        .media-grid-container .media-item {
            padding-bottom: 100%; /* 1:1 aspect ratio for grid items */
        }

        .media-item.overlay::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
        }

        .media-count-overlay {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: white;
            font-size: 1.5rem;
            font-weight: bold;
            z-index: 2;
        }

        .video-container {
            position: relative;
            width: 100%;
            height: 100%;
            background: #000;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .video-container video {
            width: 100%;
            height: 100%;
            object-fit: cover;
            background: #000;
            position: absolute;
            top: 0;
            left: 0;
        }

        .video-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            background: rgba(0, 0, 0, 0.3);
            color: white;
            font-size: 3rem;
            opacity: 0;
            transition: opacity 0.3s ease;
            pointer-events: none;
            z-index: 2;
        }

        .video-container:hover .video-overlay {
            opacity: 1;
        }

        /* Add styles for single video display */
        .media-item.single .video-container {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }

        .media-item.single .video-container video {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        /* Grid video styles */
        .media-grid-container .video-container {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }

        .media-grid-container .video-container video {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .post-meta {
            margin: 1rem 0;
            color: #8898aa;
            font-size: 0.9rem;
        }

        .post-stats {
            color: #8898aa;
            font-size: 0.9rem;
            margin-top: 1rem;
        }

        .card-footer {
            background-color: #fff;
            border-top: 1px solid #e9ecef;
            padding: 1rem;
        }

        .btn-primary {
            background-color: #5e72e4;
            border-color: #5e72e4;
        }

        .btn-primary:hover {
            background-color: #4a5cd1;
            border-color: #4a5cd1;
        }
    </style>
}

@functions {
    private string GetGridClass(int mediaCount)
    {
        return mediaCount switch
        {
            2 => "grid-2",
            3 => "grid-3",
            4 => "grid-4",
            _ => "grid-4"
        };
    }
} 