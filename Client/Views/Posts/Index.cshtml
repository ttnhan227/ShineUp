@model IEnumerable<Client.Models.PostViewModel>

@{
ViewData["Title"] = "Talent Showcase";
}

<div class="main-content-container">
    <div class="row g-4">
        <!-- Main Content (Posts Feed) -->
        <div class="col-md-8 offset-md-2 col-xl-6 offset-xl-3">
            @if (User.Identity.IsAuthenticated)
            {
            <div class="post-creation-card mb-4">
                <div class="post-creation-header">
                    <h5 class="mb-0">Share Your Talent</h5>
                </div>
                <div class="post-creation-body">
                    <form id="createPostForm" asp-action="Create" method="post" enctype="multipart/form-data">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="form-group mb-3">
                            <input type="text" id="titleInput" name="Title" class="form-control post-input"
                                   placeholder="Performance Title" required />
                            <span validation-for="Title" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                                <textarea id="contentInput" name="Content" class="form-control post-input"
                                          rows="3" placeholder="Share your talent story..."></textarea>
                            <span validation-for="Content" class="text-danger"></span>
                        </div>

                        <div id="mediaPreview" class="row g-2 mt-2"></div>

                        <div class="d-flex justify-content-between align-items-center mt-3">
                            <div class="d-flex gap-2">
                                <label for="imagesInput" class="media-upload-btn" data-bs-toggle="tooltip"
                                       data-bs-placement="bottom" title="Add photos">
                                    <i class='bx bx-image'></i>
                                    <input type="file" id="imagesInput" name="Images" class="d-none"
                                           multiple accept="image/*" />
                                </label>
                                <label for="videosInput" class="media-upload-btn" data-bs-toggle="tooltip"
                                       data-bs-placement="bottom" title="Add videos">
                                    <i class='bx bx-video'></i>
                                    <input type="file" id="videosInput" name="Videos" class="d-none"
                                           multiple accept="video/*" />
                                </label>
                                <div class="select-wrapper">
                                    <select class="custom-select" id="categorySelect" name="CategoryID">
                                        <option value="">Select Category</option>
                                        @foreach (var category in ViewBag.Categories ?? new List<SelectListItem>())
                                        {
                                        <option value="@category.Value">@category.Text</option>
                                        }
                                    </select>
                                </div>
                                <div class="select-wrapper">
                                    <select class="custom-select" id="privacySelect" name="PrivacyID">
                                        @foreach (var privacy in ViewBag.PrivacyOptions ?? new List<SelectListItem>())
                                        {
                                        <option value="@privacy.Value">@privacy.Text</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-primary rounded-pill px-4">
                                <i class='bx bx-send me-1'></i>Share
                            </button>
                        </div>
                    </form>
                </div>
            </div>
            }

            <div class="posts-feed">
                @foreach (var item in Model)
                {
                <div class="post-card mb-4">
                    <div class="post-header">
                        <a asp-controller="UserProfile" asp-action="PublicProfile" asp-route-username="@item.Username" class="text-decoration-none d-flex align-items-center">
                            <div class="post-avatar">
                                @if (!string.IsNullOrEmpty(item.ProfileImageURL))
                                {
                                <img src="@item.ProfileImageURL" alt="@item.FullName">
                                }
                                else
                                {
                                <div class="d-flex align-items-center justify-content-center h-100 bg-light rounded-circle">
                                    <i class='bx bx-user text-primary' style="font-size: 1.5rem;"></i>
                                </div>
                                }
                            </div>
                            <div class="post-meta ms-3">
                                <div class="post-author">
                                    @item.FullName
                                    @if (!string.IsNullOrEmpty(item.CategoryName))
                                    {
                                    <span class="talent-badge">@item.CategoryName</span>
                                    }
                                </div>
                                <div class="post-info">
                                    <span>@@@item.Username.ToLower().Replace(" ", "")</span>
                                    <span class="mx-1">Â·</span>
                                    <span>@item.CreatedAt.ToString("MMM dd")</span>
                                </div>
                            </div>
                        </a>
                    </div>
                    <a asp-action="Details" asp-controller="Posts" asp-route-id="@item.PostID" class="text-decoration-none">
                        <div class="post-content">
                            <h5 class="post-title">@item.Title</h5>
                            <p class="post-text">@item.Content</p>

                            @if (item.MediaFiles != null && item.MediaFiles.Any())
                            {
                            <div class="media-grid">
                                @if (item.MediaFiles.Count == 1)
                                {
                                var media = item.MediaFiles[0];
                                <div class="media-item">
                                    @if (media.Type == "image")
                                    {
                                    <img src="@media.Url" alt="@item.Title" class="clickable-image" data-fullsize="@media.Url">
                                    }
                                    else if (media.Type == "video")
                                    {
                                    <video controls preload="metadata">
                                        <source src="@media.Url" type="video/mp4">
                                    </video>
                                    }
                                </div>
                                }
                                else
                                {
                                <div class="media-grid-container @(GetGridClass(item.MediaFiles.Count))">
                                    @foreach (var media in item.MediaFiles.Take(4))
                                    {
                                    <div class="media-item">
                                        @if (media.Type == "image")
                                        {
                                        <img src="@media.Url" alt="@item.Title" class="clickable-image" data-fullsize="@media.Url">
                                        }
                                        else if (media.Type == "video")
                                        {
                                        <video controls preload="metadata">
                                            <source src="@media.Url" type="video/mp4">
                                        </video>
                                        }
                                        @if (item.MediaFiles.Count > 4 && media == item.MediaFiles.Skip(3).First())
                                        {
                                        <div class="media-overlay">
                                            +@(item.MediaFiles.Count - 4)
                                        </div>
                                        }
                                    </div>
                                    }
                                </div>
                                }
                            </div>
                            }
                        </div>
                    </a>
                    <div class="post-actions">
                        <form asp-controller="Social" asp-action="ToggleLike" method="post" class="d-inline toggle-like-form" data-post-id="@item.PostID">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="PostID" value="@item.PostID" />
                            <button type="submit" class="post-action">
                                <i class='@(item.HasLiked ? "bx bxs-heart text-danger" : "bx bx-heart")'></i>
                                <span>@item.LikesCount</span>
                            </button>
                        </form>
                        <div class="post-action">
                            <button type="button" class="toggle-comments" data-post-id="@item.PostID">
                                <i class='bx bx-comment'></i>
                                <span>@item.CommentsCount</span>
                            </button>
                        </div>
                        <div class="post-action">
                            <i class='bx bx-repost'></i>
                            <span>Share</span>
                        </div>
                        <div class="post-action">
                            <i class='bx bx-bar-chart'></i>
                            <span>Stats</span>
                        </div>
                    </div>

                    <div class="comments-section mt-4 pt-4 border-top" id="comments-container-@item.PostID" style="display: none;">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h5>Comments</h5>
                            <button type="button" class="btn-close close-comments" data-post-id="@item.PostID"></button>
                        </div>

                        @if (User.Identity.IsAuthenticated)
                        {
                        <form asp-controller="Social" asp-action="AddComment" method="post" class="mb-4 add-comment-form" data-post-id="@item.PostID">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="PostID" value="@item.PostID" />
                            <div class="input-group">
                                <input type="text" name="Content" class="form-control" placeholder="Write a comment..." required>
                                <button type="submit" class="btn btn-primary">Post</button>
                            </div>
                        </form>
                        }

                        <div id="comments-list-@item.PostID">
                            <!-- Comments will be loaded via AJAX -->
                        </div>
                    </div>
                </div>
                }
            </div>
            <!-- Image Popup -->
            <div class="image-popup" id="imagePopup">
                <span class="close-btn" id="closePopup">Ã</span>
                <img id="popupImage" src="" alt="Full-size image">
            </div>
        </div>

        <div class="col-xl-3">
            <div class="category-sidebar mb-4">
                <div class="category-card">
                    <div class="category-header">
                        <h5 class="mb-0">
                            <i class='bx bx-category me-2'></i> Talent Categories
                        </h5>
                    </div>
                    <div class="category-list">
                        <a href="@Url.Action("Index", "Posts")" class="category-item @(ViewBag.SelectedCategory == null ? "active" : "")">
                            <i class='bx bx-grid-alt'></i> All Performances
                        </a>
                        @foreach (var category in ViewBag.Categories ?? new List<SelectListItem>())
                        {
                        <a href="@Url.Action("CategoryPosts", "Posts", new { categoryId = category.Value })"
                           class="category-item @(ViewBag.SelectedCategory?.ToString() == category.Value ? "active" : "")">
                            <i class='bx bx-category'></i> @category.Text
                        </a>
                        }
                    </div>
                </div>
            </div>

            <div class="trending-card">
                <div class="trending-header">
                    <h5 class="mb-0">
                        <i class='bx bx-trending-up me-2'></i> Trending Talents
                    </h5>
                </div>
                <div class="trending-list">
                    <div class="trending-item">
                        <div class="trending-title">#DanceChallenge</div>
                        <div class="trending-stats">1.2K performances</div>
                    </div>
                    <div class="trending-item">
                        <div class="trending-title">#VocalShowcase</div>
                        <div class="trending-stats">856 performances</div>
                    </div>
                    <div class="trending-item">
                        <div class="trending-title">#MagicMasters</div>
                        <div class="trending-stats">432 performances</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
private string GetGridClass(int mediaCount)
{
return (mediaCount > 4 ? 4 : mediaCount) switch
{
2 => "grid-2",
3 => "grid-3",
4 => "grid-4",
_ => "grid-4"
};
}
}

@section Scripts {
@await Html.PartialAsync("_ValidationScriptsPartial")
<script>
    $(function () {
        $('[data-bs-toggle="tooltip"]').tooltip();

        // Handle like toggle
        $('.toggle-like-form').on('submit', function (e) {
            e.preventDefault();
            var $form = $(this);
            var postId = $form.data('post-id');
            var $button = $form.find('button');
            var $icon = $button.find('i');
            var $count = $button.find('span');

            $.ajax({
                url: '@Url.Action("ToggleLike", "Social")',
                type: 'POST',
                data: $form.serialize(),
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {
                    // Toggle heart icon
                    if ($icon.hasClass('bx-heart')) {
                        $icon.removeClass('bx-heart').addClass('bxs-heart text-danger');
                        $count.text(parseInt($count.text()) + 1);
                    } else {
                        $icon.removeClass('bxs-heart text-danger').addClass('bx-heart');
                        $count.text(parseInt($count.text()) - 1);
                    }
                }
            });
        });

        // Toggle comments section
        $('.toggle-comments').on('click', function () {
            var postId = $(this).data('post-id');
            var $container = $('#comments-container-' + postId);
            var $icon = $(this).find('i');
            var isHidden = $container.is(':hidden');

            $container.toggle();
            $icon.toggleClass('bx-comment bxs-comment');

            if (isHidden) {
                // Load comments via AJAX
                $.ajax({
                    url: '@Url.Action("GetComments", "Social")',
                    type: 'GET',
                    data: { postId: postId },
                    success: function (comments) {
                        var $commentsList = $('#comments-list-' + postId);
                        $commentsList.empty();
                        if (comments.length > 0) {
                            comments.forEach(function (comment) {
                                var commentHtml = `
                                        <div class="comment-item mb-3 d-flex">
                                            <div class="flex-shrink-0 me-2">
                                                <img src="${comment.profileImageURL || '/images/default-avatar.png'}" class="rounded-circle" width="40" height="40" alt="${comment.username}" />
                                            </div>
                                            <div class="flex-grow-1">
                                                <div class="comment-header d-flex justify-content-between align-items-center">
                                                    <div>
                                                        <strong>${comment.username}</strong>
                                                        <small class="text-muted ms-2">${comment.timeAgo}</small>
                                                    </div>
                                                    ${comment.userID == '@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value' ? `
                                                        <form class="delete-comment-form d-inline" data-comment-id="${comment.commentID}" data-post-id="${postId}">
                                                            <input type="hidden" name="commentId" value="${comment.commentID}" />
                                                            <input type="hidden" name="postId" value="${postId}" />
                                                            <button type="submit" class="btn btn-link text-danger p-0 ms-2" onclick="return confirm('Are you sure you want to delete this comment?')">
                                                                <i class='bx bx-trash'></i>
                                                            </button>
                                                        </form>
                                                    ` : ''}
                                                </div>
                                                <div class="comment-content">${comment.content}</div>
                                            </div>
                                        </div>`;
                                $commentsList.append(commentHtml);
                            });
                        } else {
                            $commentsList.html('<p class="text-muted">No comments yet. Be the first to comment!</p>');
                        }
                    }
                });
            }
        });

        // Close comments section
        $('.close-comments').on('click', function () {
            var postId = $(this).data('post-id');
            $('#comments-container-' + postId).hide();
            var $icon = $('.toggle-comments[data-post-id="' + postId + '"] i');
            $icon.removeClass('bxs-comment').addClass('bx-comment');
        });

        // Handle comment submission
        $('.add-comment-form').on('submit', function (e) {
            e.preventDefault();
            var $form = $(this);
            var postId = $form.data('post-id');
            var $commentsList = $('#comments-list-' + postId);
            var $count = $('.toggle-comments[data-post-id="' + postId + '"] span');

            $.ajax({
                url: '@Url.Action("AddComment", "Social")',
                type: 'POST',
                data: $form.serialize(),
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function () {
                    // Clear input
                    $form.find('input[name="Content"]').val('');
                    // Increment comment count
                    $count.text(parseInt($count.text()) + 1);
                    // Reload comments
                    $.ajax({
                        url: '@Url.Action("GetComments", "Social")',
                        type: 'GET',
                        data: { postId: postId },
                        success: function (comments) {
                            $commentsList.empty();
                            if (comments.length > 0) {
                                comments.forEach(function (comment) {
                                    var commentHtml = `
                                            <div class="comment-item mb-3 d-flex">
                                                <div class="flex-shrink-0 me-2">
                                                    <img src="${comment.profileImageURL || '/images/default-avatar.png'}" class="rounded-circle" width="40" height="40" alt="${comment.username}" />
                                                </div>
                                                <div class="flex-grow-1">
                                                    <div class="comment-header d-flex justify-content-between align-items-center">
                                                        <div>
                                                            <strong>${comment.username}</strong>
                                                            <small class="text-muted ms-2">${comment.timeAgo}</small>
                                                        </div>
                                                        ${comment.userID == '@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value' ? `
                                                            <form class="delete-comment-form d-inline" data-comment-id="${comment.commentID}" data-post-id="${postId}">
                                                                <input type="hidden" name="commentId" value="${comment.commentID}" />
                                                                <input type="hidden" name="postId" value="${postId}" />
                                                                <button type="submit" class="btn btn-link text-danger p-0 ms-2" onclick="return confirm('Are you sure you want to delete this comment?')">
                                                                    <i class='bx bx-trash'></i>
                                                                </button>
                                                            </form>
                                                        ` : ''}
                                                    </div>
                                                    <div class="comment-content">${comment.content}</div>
                                                </div>
                                            </div>`;
                                    $commentsList.append(commentHtml);
                                });
                            } else {
                                $commentsList.html('<p class="text-muted">No comments yet. Be the first to comment!</p>');
                            }
                        }
                    });
                }
            });
        });

        // Handle comment deletion
        $(document).on('submit', '.delete-comment-form', function (e) {
            e.preventDefault();
            var $form = $(this);
            var commentId = $form.data('comment-id');
            var postId = $form.data('post-id');
            var $commentsList = $('#comments-list-' + postId);
            var $count = $('.toggle-comments[data-post-id="' + postId + '"] span');

            // Confirmation is handled by the button's onclick, so proceed with AJAX if form is submitted
            $.ajax({
                url: '@Url.Action("DeleteComment", "Social")',
                type: 'POST',
                data: $form.serialize(),
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function () {
                    // Decrement comment count
                    $count.text(parseInt($count.text()) - 1);
                    // Reload comments
                    $.ajax({
                        url: '@Url.Action("GetComments", "Social")',
                        type: 'GET',
                        data: { postId: postId },
                        success: function (comments) {
                            $commentsList.empty();
                            if (comments.length > 0) {
                                comments.forEach(function (comment) {
                                    var commentHtml = `
                                            <div class="comment-item mb-3 d-flex">
                                                <div class="flex-shrink-0 me-2">
                                                    <img src="${comment.profileImageURL || '/images/default-avatar.png'}" class="rounded-circle" width="40" height="40" alt="${comment.username}" />
                                                </div>
                                                <div class="flex-grow-1">
                                                    <div class="comment-header d-flex justify-content-between align-items-center">
                                                        <div>
                                                            <strong>${comment.username}</strong>
                                                            <small class="text-muted ms-2">${comment.timeAgo}</small>
                                                        </div>
                                                        ${comment.userID == '@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value' ? `
                                                            <form class="delete-comment-form d-inline" data-comment-id="${comment.commentID}" data-post-id="${postId}">
                                                                <input type="hidden" name="commentId" value="${comment.commentID}" />
                                                                <input type="hidden" name="postId" value="${postId}" />
                                                                <button type="submit" class="btn btn-link text-danger p-0 ms-2" onclick="return confirm('Are you sure you want to delete this comment?')">
                                                                    <i class='bx bx-trash'></i>
                                                                </button>
                                                            </form>
                                                        ` : ''}
                                                    </div>
                                                    <div class="comment-content">${comment.content}</div>
                                                </div>
                                            </div>`;
                                    $commentsList.append(commentHtml);
                                });
                            } else {
                                $commentsList.html('<p class="text-muted">No comments yet. Be the first to comment!</p>');
                            }
                        }
                    });
                }
            });
        });

        // Image popup functionality
        document.addEventListener('DOMContentLoaded', function () {
            const images = document.querySelectorAll('.clickable-image');
            const popup = document.getElementById('imagePopup');
            const popupImage = document.getElementById('popupImage');
            const closeBtn = document.getElementById('closePopup');

            images.forEach(image => {
                image.addEventListener('click', function (e) {
                    e.preventDefault();
                    popupImage.src = this.dataset.fullsize;
                    popup.style.display = 'flex';
                });
            });

            closeBtn.addEventListener('click', function () {
                popup.style.display = 'none';
                popupImage.src = '';
            });

            popup.addEventListener('click', function (e) {
                if (e.target === popup) {
                    popup.style.display = 'none';
                    popupImage.src = '';
                }
            });
        });

        // Preview selected images
        document.querySelector('input[name="Images"]').addEventListener('change', function (e) {
            const previewContainer = document.createElement('div');
            previewContainer.className = 'row g-2';

            Array.from(e.target.files).forEach(file => {
                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const col = document.createElement('div');
                        col.className = 'col-md-3';
                        col.innerHTML = `
                                <div class="card">
                                    <img src="${e.target.result}" class="card-img-top" style="height: 150px; object-fit: cover;">
                                </div>
                            `;
                        previewContainer.appendChild(col);
                    };
                    reader.readAsDataURL(file);
                }
            });

            const existingPreview = document.querySelector('#mediaPreview');
            if (existingPreview) {
                existingPreview.innerHTML = '';
                existingPreview.appendChild(previewContainer);
            }
        });

        // Preview selected videos
        document.querySelector('input[name="Videos"]').addEventListener('change', function (e) {
            const previewContainer = document.createElement('div');
            previewContainer.className = 'row g-2';

            Array.from(e.target.files).forEach(file => {
                if (file.type.startsWith('video/')) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const col = document.createElement('div');
                        col.className = 'col-md-6';
                        col.innerHTML = `
                                <div class="card">
                                    <video src="${e.target.result}" class="card-img-top" style="height: 200px; object-fit: cover;" controls></video>
                                </div>
                            `;
                        previewContainer.appendChild(col);
                    };
                    reader.readAsDataURL(file);
                }
            });

            const existingPreview = document.querySelector('#mediaPreview');
            if (existingPreview) {
                existingPreview.innerHTML = '';
                existingPreview.appendChild(previewContainer);
            }
        });
    });
</script>
}