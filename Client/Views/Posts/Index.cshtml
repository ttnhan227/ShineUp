@using System.Security.Claims
@model IEnumerable<PostViewModel>

@{
    ViewData["Title"] = "Talent Showcase";
}

<div class="main-content-container container py-4">
    <div class="row g-4">
        <!-- Main Content (Posts Feed) -->
        <div class="col-md-8 offset-md-2 col-xl-6 offset-xl-3">
            @if (User.Identity.IsAuthenticated)
            {
                <div class="post-creation-card card mb-4 shadow-sm border-0">
                    <div class="card-header bg-light border-0">
                        <h5 class="mb-0 fw-semibold">Create a Post</h5>
                    </div>
                    <div class="card-body">
                        <form id="createPostForm" asp-action="CreatePost" asp-controller="Posts" method="post"
                              enctype="multipart/form-data">
                            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                            <div class="mb-3">
                                <input type="text" id="titleInput" name="Title" class="form-control rounded-3"
                                       placeholder="Performance Title" required/>
                                <span validation-for="Title" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <textarea id="contentInput" name="Content" class="form-control rounded-3" rows="4"
                                          placeholder="Share your talent story..."></textarea>
                                <span validation-for="Content" class="text-danger"></span>
                            </div>

                            <div id="mediaPreview" class="row g-2 mb-3"></div>

                            <div class="d-flex flex-column flex-md-row gap-3 align-items-md-center">
                                <div class="d-flex flex-wrap gap-2 flex-grow-1">
                                    <label for="imagesInput"
                                           class="btn btn-outline-primary btn-sm rounded-pill d-flex align-items-center gap-1"
                                           data-bs-toggle="tooltip" title="Add photos">
                                        <i class='bx bx-image'></i> Photos
                                        <input type="file" id="imagesInput" name="ImageFiles" class="d-none" multiple
                                               accept="image/*"/>
                                    </label>
                                    <label for="videosInput"
                                           class="btn btn-outline-primary btn-sm rounded-pill d-flex align-items-center gap-1"
                                           data-bs-toggle="tooltip" title="Add videos">
                                        <i class='bx bx-video'></i> Videos
                                        <input type="file" id="videosInput" name="VideoFiles" class="d-none" multiple
                                               accept="video/*"/>
                                    </label>
                                    <select class="form-select form-select-sm rounded-3" id="categorySelect"
                                            name="CategoryID">
                                        <option value="">Select Category</option>
                                        @foreach (var category in ViewBag.Categories ?? new List<SelectListItem>())
                                        {
                                            <option value="@category.Value">@category.Text</option>
                                        }
                                    </select>
                                    <select class="form-select form-select-sm rounded-3" id="privacySelect"
                                            name="PrivacyID">
                                        @foreach (var privacy in ViewBag.PrivacyOptions ?? new List<SelectListItem>())
                                        {
                                            <option value="@privacy.Value">@privacy.Text</option>
                                        }
                                    </select>
                                    @if (ViewBag.UserCommunities != null && ((IEnumerable<SelectListItem>)ViewBag.UserCommunities).Any())
                                    {
                                        <select class="form-select form-select-sm rounded-3 flex-grow-1"
                                                id="communitySelect" name="CommunityID">
                                            <option value="">Tag a Community (Optional)</option>
                                            @foreach (var item in ViewBag.UserCommunities as IEnumerable<SelectListItem>)
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        </select>
                                    }
                                    else
                                    {
                                        <span class="text-muted small align-self-center">No communities joined</span>
                                    }
                                </div>
                                <button type="submit" class="btn btn-primary btn-sm rounded-pill px-4" id="shareButton">
                                    <i class='bx bx-send me-1'></i> Share
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            }

            <div class="posts-feed">
                @foreach (var item in Model)
                {
                    <div class="post-card mb-4">
                        <div class="post-header">
                            <a asp-controller="UserProfile" asp-action="PublicProfile"
                               asp-route-username="@item.Username"
                               class="text-decoration-none d-flex align-items-center">
                                <div class="post-avatar">
                                    @if (!string.IsNullOrEmpty(item.ProfileImageURL))
                                    {
                                        <img src="@item.ProfileImageURL" alt="@item.FullName">
                                    }
                                    else
                                    {
                                        <div
                                            class="d-flex align-items-center justify-content-center h-100 bg-light rounded-circle">
                                            <i class='bx bx-user text-primary' style="font-size: 1.5rem;"></i>
                                        </div>
                                    }
                                </div>
                                <div class="post-meta ms-3">
                                    <div class="post-author">
                                        @item.FullName
                                        @if (!string.IsNullOrEmpty(item.CategoryName))
                                        {
                                            <span class="talent-badge">@item.CategoryName</span>
                                        }
                                    </div>
                                    <div class="post-info">
                                        <span>@@@item.Username.ToLower().Replace(" ", "")</span>
                                        <span class="mx-1">Â·</span>
                                        <span>@item.CreatedAt.ToString("MMM dd")</span>
                                    </div>
                                </div>
                            </a>
                        </div>
                        <a asp-action="Details" asp-controller="Posts" asp-route-id="@item.PostID"
                           class="text-decoration-none">
                            <div class="post-content">
                                <h5 class="post-title">@item.Title</h5>
                                <p class="post-text">@item.Content</p>

                                @if (item.MediaFiles != null && item.MediaFiles.Any())
                                {
                                    <div class="media-grid">
                                        @if (item.MediaFiles.Count == 1)
                                        {
                                            var media = item.MediaFiles[0];
                                            <div class="media-item">
                                                @if (media.Type == "image")
                                                {
                                                    <img src="@media.Url" alt="@item.Title" class="clickable-image"
                                                         data-fullsize="@media.Url">
                                                }
                                                else if (media.Type == "video")
                                                {
                                                    <video controls preload="metadata">
                                                        <source src="@media.Url" type="video/mp4">
                                                    </video>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="media-grid-container @(GetGridClass(item.MediaFiles.Count))">
                                                @foreach (var media in item.MediaFiles.Take(4))
                                                {
                                                    <div class="media-item">
                                                        @if (media.Type == "image")
                                                        {
                                                            <img src="@media.Url" alt="@item.Title"
                                                                 class="clickable-image" data-fullsize="@media.Url">
                                                        }
                                                        else if (media.Type == "video")
                                                        {
                                                            <video controls preload="metadata">
                                                                <source src="@media.Url" type="video/mp4">
                                                            </video>
                                                        }
                                                        @if (item.MediaFiles.Count > 4 && media == item.MediaFiles.Skip(3).First())
                                                        {
                                                            <div class="media-overlay">
                                                                +@(item.MediaFiles.Count - 4)
                                                            </div>
                                                        }
                                                    </div>
                                                }
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        </a>
                        <div class="post-actions">
                            <form asp-controller="Social" asp-action="ToggleLike" method="post"
                                  class="d-inline toggle-like-form" data-post-id="@item.PostID">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="PostID" value="@item.PostID"/>
                                <button type="submit" class="post-action">
                                    <i class='@(item.HasLiked ? "bx bxs-heart text-danger" : "bx bx-heart")'></i>
                                    <span>@item.LikesCount</span>
                                </button>
                            </form>
                            <div class="post-action">
                                <button type="button" class="toggle-comments" data-post-id="@item.PostID">
                                    <i class='bx bx-comment'></i>
                                    <span>@item.CommentsCount</span>
                                </button>
                            </div>
                            <div class="post-action">
                                <i class='bx bx-repost'></i>
                                <span>Share</span>
                            </div>
                            <div class="post-action">
                                <i class='bx bx-bar-chart'></i>
                                <span>Stats</span>
                            </div>
                        </div>

                        <div class="comments-section mt-4 pt-4 border-top" id="comments-container-@item.PostID" style="display: none;">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h5>Comments</h5>
                                <button type="button" class="btn-close close-comments" data-post-id="@item.PostID"></button>
                            </div>

                            @if (User.Identity.IsAuthenticated)
                            {
                                <form asp-controller="Social" asp-action="AddComment" method="post" class="mb-4 add-comment-form" data-post-id="@item.PostID">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="PostID" value="@item.PostID"/>
                                    <div class="input-group">
                                        <input type="text" name="Content" class="form-control" placeholder="Write a comment..." required>
                                        <button type="submit" class="btn btn-primary">Post</button>
                                    </div>
                                </form>
                            }

                            <div id="comments-list-@item.PostID">
                                @if (item.Comments != null && item.Comments.Count > 0)
                                {
                                    foreach (var comment in item.Comments)
                                    {
                                        <div class="comment-item mb-3 d-flex">
                                            <div class="flex-shrink-0 me-2">
                                                <img src="@(string.IsNullOrEmpty(comment.ProfileImageURL) ? "/images/default-avatar.png" : comment.ProfileImageURL)" class="rounded-circle" width="40" height="40" alt="@comment.Username" />
                                            </div>
                                            <div class="flex-grow-1">
                                                <div class="comment-header d-flex justify-content-between align-items-center">
                                                    <div>
                                                        <strong>@comment.Username</strong>
                                                        <small class="text-muted ms-2">@comment.TimeAgo</small>
                                                    </div>
                                                    @if (User.Identity.IsAuthenticated && User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == comment.UserID.ToString())
                                                    {
                                                        <form asp-controller="Social" asp-action="DeleteComment" method="post" class="delete-comment-form d-inline" data-comment-id="@comment.CommentID" data-post-id="@item.PostID">
                                                            @Html.AntiForgeryToken()
                                                            <input type="hidden" name="commentId" value="@comment.CommentID" />
                                                            <input type="hidden" name="postId" value="@item.PostID" />
                                                            <button type="submit" class="btn btn-link text-danger p-0 ms-2" onclick="return confirm('Are you sure you want to delete this comment?')">
                                                                <i class='bx bx-trash'></i>
                                                            </button>
                                                        </form>
                                                    }
                                                </div>
                                                <div class="comment-content">@comment.Content</div>
                                            </div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p class="text-muted">No comments yet. Be the first to comment!</p>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
            <!-- Image Popup -->
            <div class="image-popup" id="imagePopup">
                <span class="close-btn" id="closePopup">Ã</span>
                <img id="popupImage" src="" alt="Full-size image">
            </div>
        </div>

        <div class="col-xl-3">
            <div class="category-sidebar mb-4">
                <div class="category-card">
                    <div class="category-header">
                        <h5 class="mb-0">
                            <i class="bx bx-category me-2"></i> Talent Categories
                        </h5>
                    </div>
                    <div class="category-list">
                        <a href="@Url.Action("Index", "Posts")"
                           class="category-item @(ViewBag.SelectedCategory == null ? "active" : "")">
                            <i class="bx bx-grid-alt"></i> All Performances
                        </a>
                        @foreach (var category in ViewBag.Categories ?? new List<SelectListItem>())
                        {
                            <a href="@Url.Action("CategoryPosts", "Posts", new { categoryId = category.Value })"
                               class="category-item @(ViewBag.SelectedCategory?.ToString() == category.Value ? "active" : "")">
                                <i class='bx bx-category'></i> @category.Text
                            </a>
                        }
                    </div>
                </div>
            </div>

            <div class="trending-card">
                <div class="trending-header">
                    <h5 class="mb-0">
                        <i class="bx bx-trending-up me-2"></i> Trending Talents
                    </h5>
                </div>
                <div class="trending-list">
                    <div class="trending-item">
                        <div class="trending-title">#DanceChallenge</div>
                        <div class="trending-stats">1.2K performances</div>
                    </div>
                    <div class="trending-item">
                        <div class="trending-title">#VocalShowcase</div>
                        <div class="trending-stats">856 performances</div>
                    </div>
                    <div class="trending-item">
                        <div class="trending-title">#MagicMasters</div>
                        <div class="trending-stats">432 performances</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {

    private string GetGridClass(int mediaCount)
    {
        return (mediaCount > 4 ? 4 : mediaCount) switch
        {
            2 => "grid-2",
            3 => "grid-3",
            4 => "grid-4",
            _ => "grid-4"
        };
    }

}

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        $(function () {
            $('[data-bs-toggle="tooltip"]').tooltip();

            // Handle post creation form submission
            $('#createPostForm').on('submit', function (e) {
                e.preventDefault();
                var formData = new FormData(this);
                var $form = $(this);
                var $submitBtn = $form.find('button[type="submit"]');
                var originalBtnText = $submitBtn.html();
                $submitBtn.prop('disabled', true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Posting...');

                var communityId = $('#communitySelect').val();
                if (communityId) {
                    formData.append('CommunityID', communityId);
                }

                $.ajax({
                    url: $form.attr('action'),
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response, status, xhr) {
                        if (xhr.getResponseHeader('X-Redirect-Url')) {
                            window.location.href = xhr.getResponseHeader('X-Redirect-Url');
                            return;
                        }
                        $form.trigger('reset');
                        $('#mediaPreview').empty();
                        if (xhr.responseJSON && xhr.responseJSON.redirectUrl) {
                            window.location.href = xhr.responseJSON.redirectUrl;
                        } else {
                            window.location.reload();
                        }
                    },
                    error: function (xhr) {
                        var errorMessage = 'An error occurred while creating the post.';
                        try {
                            var response = JSON.parse(xhr.responseText);
                            errorMessage = response.title || response.detail || errorMessage;
                        } catch (e) {
                        }
                        alert('Error: ' + errorMessage);
                    },
                    complete: function () {
                        $submitBtn.prop('disabled', false).html(originalBtnText);
                    }
                });
            });

            // Handle media preview for images and videos
            function updateMediaPreview(files, inputName) {
                var $preview = $('#mediaPreview');
                $preview.empty();

                if (files.length > 4) {
                    alert('You can only upload up to 4 files at once.');
                    $(`input[name="${inputName}"]`)[0].value = '';
                    return;
                }

                Array.from(files).forEach((file, index) => {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        var $mediaItem = $('<div class="col-6 col-md-3 position-relative"></div>');
                        var content;
                        if (file.type.startsWith('image/')) {
                            content = `<img src="${e.target.result}" class="img-fluid rounded" style="height: 100px; object-fit: cover;" alt="${file.name}" />`;
                        } else if (file.type.startsWith('video/')) {
                            content = `<video src="${e.target.result}" class="img-fluid rounded" style="height: 100px; object-fit: cover;" controls></video>`;
                        }
                        $mediaItem.html(`
                            <div class="media-preview-item">
                                ${content}
                                <button type="button" class="btn-close position-absolute top-0 end-0 m-1" data-file-name="${file.name}" data-input-name="${inputName}"></button>
                            </div>
                        `);
                        $preview.append($mediaItem);
                    };
                    reader.readAsDataURL(file);
                });
            }

            $('#imagesInput').on('change', function () {
                updateMediaPreview(this.files, 'ImageFiles');
            });

            $('#videosInput').on('change', function () {
                updateMediaPreview(this.files, 'VideoFiles');
            });

            // Handle media removal
            $(document).on('click', '.btn-close', function () {
                var fileName = $(this).data('file-name');
                var inputName = $(this).data('input-name');
                $(this).closest('.col-6').remove();

                var $input = $(`input[name="${inputName}"]`);
                var files = Array.from($input[0].files);
                var remainingFiles = files.filter(file => file.name !== fileName);
                var dataTransfer = new DataTransfer();
                remainingFiles.forEach(file => dataTransfer.items.add(file));
                $input[0].files = dataTransfer.files;
            });

            // Handle like toggle
            $('.toggle-like-form').on('submit', function (e) {
                e.preventDefault();
                var $form = $(this);
                var postId = $form.data('post-id');
                var $button = $form.find('button');
                var $icon = $button.find('i');
                var $count = $button.find('span');

                $.ajax({
                    url: '@Url.Action("ToggleLike", "Social")',
                    type: 'POST',
                    data: $form.serialize(),
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if ($icon.hasClass('bx-heart')) {
                            $icon.removeClass('bx-heart').addClass('bxs-heart text-danger');
                            $count.text(parseInt($count.text()) + 1);
                        } else {
                            $icon.removeClass('bxs-heart text-danger').addClass('bx-heart');
                            $count.text(parseInt($count.text()) - 1);
                        }
                    }
                });
            });

            // Toggle comments section (no AJAX, just show/hide)
            $('.toggle-comments').on('click', function () {
                var postId = $(this).data('post-id');
                var $container = $('#comments-container-' + postId);
                var $icon = $(this).find('i');
                var isHidden = $container.is(':hidden');
                $container.toggle();
                $icon.toggleClass('bx-comment bxs-comment');
            });

            // Close comments section
            $('.close-comments').on('click', function () {
                var postId = $(this).data('post-id');
                $('#comments-container-' + postId).hide();
                var $icon = $('.toggle-comments[data-post-id="' + postId + '"] i');
                $icon.removeClass('bxs-comment').addClass('bx-comment');
            });

            // Handle comment submission
            $('.add-comment-form').on('submit', function (e) {
                e.preventDefault();
                var $form = $(this);
                var postId = $form.data('post-id');
                var $commentsList = $('#comments-list-' + postId);
                var $count = $('.toggle-comments[data-post-id="' + postId + '"] span');

                $.ajax({
                    url: '@Url.Action("AddComment", "Social")',
                    type: 'POST',
                    data: $form.serialize(),
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function () {
                        $form.find('input[name="Content"]').val('');
                        $count.text(parseInt($count.text()) + 1);
                        $.ajax({
                            url: '@Url.Action("GetComments", "Social")',
                            type: 'GET',
                            data: {postId: postId},
                            success: function (comments) {
                                $commentsList.empty();
                                if (comments.length > 0) {
                                    comments.forEach(function (comment) {
                                        var commentHtml = `
                                            <div class="comment-item mb-3 d-flex">
                                                <div class="flex-shrink-0 me-2">
                                                    <img src="${comment.profileImageURL || '/images/default-avatar.png'}" class="rounded-circle" width="40" height="40" alt="${comment.username}" />
                                                </div>
                                                <div class="flex-grow-1">
                                                    <div class="comment-header d-flex justify-content-between align-items-center">
                                                        <div>
                                                            <strong>${comment.username}</strong>
                                                            <small class="text-muted ms-2">${comment.timeAgo}</small>
                                                        </div>
                                                        ${comment.userID == '@User.FindFirst(ClaimTypes.NameIdentifier)?.Value' ? `
                                                            <form class="delete-comment-form d-inline" data-comment-id="${comment.commentID}" data-post-id="${postId}">
                                                                <input type="hidden" name="commentId" value="${comment.commentID}" />
                                                                <input type="hidden" name="postId" value="${postId}" />
                                                                <button type="submit" class="btn btn-link text-danger p-0 ms-2" onclick="return confirm('Are you sure you want to delete this comment?')">
                                                                    <i class='bx bx-trash'></i>
                                                                </button>
                                                            </form>
                                                        ` : ''}
                                                    </div>
                                                    <div class="comment-content">${comment.content}</div>
                                                </div>
                                            </div>`;
                                        $commentsList.append(commentHtml);
                                    });
                                } else {
                                    $commentsList.html('<p class="text-muted">No comments yet. Be the first to comment!</p>');
                                }
                            }
                        });
                    }
                });
            });

            // Handle comment deletion
            $(document).on('submit', '.delete-comment-form', function (e) {
                e.preventDefault();
                var $form = $(this);
                var commentId = $form.data('comment-id');
                var postId = $form.data('post-id');
                var $commentsList = $('#comments-list-' + postId);
                var $count = $('.toggle-comments[data-post-id="' + postId + '"] span');

                $.ajax({
                    url: '@Url.Action("DeleteComment", "Social")',
                    type: 'POST',
                    data: $form.serialize(),
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function () {
                        $count.text(parseInt($count.text()) - 1);
                        $.ajax({
                            url: '@Url.Action("GetComments", "Social")',
                            type: 'GET',
                            data: {postId: postId},
                            success: function (comments) {
                                $commentsList.empty();
                                if (comments.length > 0) {
                                    comments.forEach(function (comment) {
                                        var commentHtml = `
                                            <div class="comment-item mb-3 d-flex">
                                                <div class="flex-shrink-0 me-2">
                                                    <img src="${comment.profileImageURL || '/images/default-avatar.png'}" class="rounded-circle" width="40" height="40" alt="${comment.username}" />
                                                </div>
                                                <div class="flex-grow-1">
                                                    <div class="comment-header d-flex justify-content-between align-items-center">
                                                        <div>
                                                            <strong>${comment.username}</strong>
                                                            <small class="text-muted ms-2">${comment.timeAgo}</small>
                                                        </div>
                                                        ${comment.userID == '@User.FindFirst(ClaimTypes.NameIdentifier)?.Value' ? `
                                                            <form class="delete-comment-form d-inline" data-comment-id="${comment.commentID}" data-post-id="${postId}">
                                                                <input type="hidden" name="commentId" value="${comment.commentID}" />
                                                                <input type="hidden" name="postId" value="${postId}" />
                                                                <button type="submit" class="btn btn-link text-danger p-0 ms-2" onclick="return confirm('Are you sure you want to delete this comment?')">
                                                                <i class='bx bx-trash'></i>
                                                            </button>
                                                        </form>
                                                    ` : ''}
                                                </div>
                                                <div class="comment-content">${comment.content}</div>
                                            </div>
                                        </div>`;
                                        $commentsList.append(commentHtml);
                                    });
                                } else {
                                    $commentsList.html('<p class="text-muted">No comments yet. Be the first to comment!</p>');
                                }
                            }
                        });
                    }
                });
            });

            // Image popup functionality
            $(document).on('click', '.clickable-image', function (e) {
                e.preventDefault();
                $('#popupImage').attr('src', $(this).data('fullsize'));
                $('#imagePopup').css('display', 'flex');
            });

            $('#closePopup').on('click', function () {
                $('#imagePopup').css('display', 'none');
                $('#popupImage').attr('src', '');
            });

            $('#imagePopup').on('click', function (e) {
                if (e.target === this) {
                    $(this).css('display', 'none');
                    $('#popupImage').attr('src', '');
                }
            });
        });
    </script>
    <style>
        .post-creation-card {
            background: #fff;
            border-radius: 0.75rem;
            overflow: hidden;
        }

        .post-creation-card .card-header {
            background: #f8f9fa;
            padding: 1rem;
        }

        .post-creation-card .card-body {
            padding: 1.5rem;
        }

        .form-control, .form-select {
            border: 1px solid #dee2e6;
            transition: border-color 0.2s ease, box-shadow 0.2s ease;
        }

        .form-control:focus, .form-select:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.1);
            outline: none;
        }

        .btn-outline-primary {
            border-color: #007bff;
            color: #007bff;
        }

        .btn-outline-primary:hover {
            background: #007bff;
            color: #fff;
        }

        #mediaPreview .media-preview-item {
            position: relative;
            border-radius: 0.5rem;
            overflow: hidden;
        }

        #mediaPreview img, #mediaPreview video {
            width: 100%;
            height: 100px;
            object-fit: cover;
            border-radius: 0.5rem;
        }

        #mediaPreview .btn-close {
            background: rgba(0, 0, 0, 0.5);
            color: #fff;
            font-size: 0.75rem;
            padding: 0.25rem;
        }

        #shareButton {
            font-size: 0.875rem;
            padding: 0.5rem 1.5rem;
        }

        @@media (max-width: 767px) {
            .post-creation-card .d-flex.flex-md-row {
                flex-direction: column !important;
                align-items: stretch !important;
            }

            .form-select, .btn {
                width: 100%;
            }

            #shareButton {
                width: 100%;
            }
        }

        .image-popup {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .image-popup img {
            max-width: 90%;
            max-height: 90%;
            object-fit: contain;
        }

        .image-popup .close-btn {
            position: absolute;
            top: 20px;
            right: 20px;
            color: #fff;
            font-size: 2rem;
            cursor: pointer;
        }
    </style>
}