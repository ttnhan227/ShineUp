@model IEnumerable<Client.Models.PostViewModel>

@{
    ViewData["Title"] = "Talent Showcase";
}

@section Styles {
    <link href='https://cdn.jsdelivr.net/npm/boxicons@1.9.2/css/boxicons.min.css' rel='stylesheet'>
    <style>
        :root {
            --primary-color: #7c3aed;
            --primary-hover: #6d28d9;
            --secondary-color: #f3f4f6;
            --text-primary: #1f2937;
            --text-secondary: #6b7280;
            --border-color: #e5e7eb;
            --card-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            --transition: all 0.3s ease;
        }

        body {
            background-color: #f9fafb;
            color: var(--text-primary);
        }

        .main-content-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 2rem 1rem;
        }

        /* Category Sidebar Styles */
        .category-sidebar {
            position: sticky;
            top: 2rem;
        }

        .category-card {
            background: white;
            border-radius: 1rem;
            box-shadow: var(--card-shadow);
            overflow: hidden;
            transition: var(--transition);
        }

        .category-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
        }

        .category-header {
            padding: 1.5rem;
            border-bottom: 1px solid var(--border-color);
            background: linear-gradient(135deg, var(--primary-color), var(--primary-hover));
            color: white;
        }

        .category-list {
            padding: 1rem;
        }

        .category-item {
            display: flex;
            align-items: center;
            padding: 0.75rem 1rem;
            color: var(--text-secondary);
            text-decoration: none;
            border-radius: 0.75rem;
            transition: var(--transition);
            margin-bottom: 0.5rem;
        }

        .category-item:hover {
            background-color: var(--secondary-color);
            color: var(--primary-color);
            transform: translateX(5px);
        }

        .category-item.active {
            background-color: var(--primary-color);
            color: white;
        }

        .category-item i {
            margin-right: 0.75rem;
            font-size: 1.25rem;
        }

        /* Post Creation Card */
        .post-creation-card {
            background: white;
            border-radius: 1rem;
            box-shadow: var(--card-shadow);
            margin-bottom: 2rem;
            overflow: hidden;
            transition: var(--transition);
            position: relative;
            z-index: 100;
        }

        .post-creation-header {
            padding: 1.5rem;
            border-bottom: 1px solid var(--border-color);
            background: linear-gradient(135deg, var(--primary-color), var(--primary-hover));
            color: white;
        }

        .post-creation-body {
            padding: 1.5rem;
        }

        .post-input {
            border: 2px solid var(--border-color);
            border-radius: 0.75rem;
            padding: 1rem;
            transition: var(--transition);
        }

        .post-input:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(124, 58, 237, 0.1);
        }

        /* Select Box Styles */
        .select-wrapper {
            position: relative;
            display: inline-block;
        }

        .select-wrapper::after {
            content: '\ea4a';
            font-family: 'boxicons';
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-secondary);
            pointer-events: none;
            transition: var(--transition);
        }

        .select-wrapper:hover::after {
            color: var(--primary-color);
        }

        .custom-select {
            appearance: none;
            background: var(--secondary-color);
            border: none;
            border-radius: 0.75rem;
            padding: 0.75rem 2.5rem 0.75rem 1rem;
            color: var(--text-secondary);
            font-size: 0.875rem;
            cursor: pointer;
            transition: var(--transition);
            min-width: 150px;
        }

        .custom-select:hover {
            background: var(--primary-color);
            color: white;
        }

        .custom-select:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(124, 58, 237, 0.1);
        }

        .custom-select option {
            background: white;
            color: var(--text-primary);
            padding: 0.5rem;
        }

        /* Update media upload buttons to match select style */
        .media-upload-btn {
            background: var(--secondary-color);
            border: none;
            border-radius: 0.75rem;
            padding: 0.75rem 1rem;
            color: var(--text-secondary);
            transition: var(--transition);
            cursor: pointer;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .media-upload-btn:hover {
            background: var(--primary-color);
            color: white;
        }

        .media-upload-btn i {
            font-size: 1.25rem;
            /* Ensure icon is displayed correctly */
            display: inline-block;
            color: var(--text-secondary); /* Explicitly set color */
        }

        /* Specific style to ensure image icon visibility */
        label[for="imagesInput"] i {
             display: inline-block;
             color: var(--text-secondary);
        }

        /* Post Card Styles */
        .post-card {
            background: white;
            border-radius: 1rem;
            box-shadow: var(--card-shadow);
            margin-bottom: 2rem;
            overflow: hidden;
            transition: var(--transition);
            position: relative;
            z-index: 100;
        }

        .post-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
        }

        .post-header {
            padding: 1.5rem;
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .post-avatar {
            width: 3rem;
            height: 3rem;
            border-radius: 50%;
            overflow: hidden;
            border: 2px solid var(--primary-color);
        }

        .post-avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .post-meta {
            flex: 1;
        }

        .post-author {
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 0.25rem;
        }

        .post-info {
            color: var(--text-secondary);
            font-size: 0.875rem;
        }

        .post-content {
            padding: 0 1.5rem 1.5rem;
        }

        .post-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 0.75rem;
        }

        .post-text {
            color: var(--text-secondary);
            line-height: 1.6;
            margin-bottom: 1rem;
        }

        /* Media Grid Styles */
        .media-grid {
            border-radius: 0.75rem;
            overflow: hidden;
            margin: 1rem 0;
        }

        .media-grid-container {
            display: grid;
            gap: 0.5rem;
            background: var(--secondary-color);
        }

        .media-item {
            position: relative;
            border-radius: 0.5rem;
            overflow: hidden;
            aspect-ratio: 16/9;
        }

        .media-item img,
        .media-item video {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .media-overlay {
            position: absolute;
            inset: 0;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.5rem;
            opacity: 0;
            transition: var(--transition);
        }

        .media-item:hover .media-overlay {
            opacity: 1;
        }

        /* Post Actions */
        .post-actions {
            padding: 1rem 1.5rem;
            border-top: 1px solid var(--border-color);
            display: flex;
            justify-content: space-around;
            align-items: center;
        }

        .post-action {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: var(--text-secondary);
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            transition: var(--transition);
            cursor: pointer;
        }

        .post-action:hover {
            background: var(--secondary-color);
            color: var(--primary-color);
        }

        .post-action i {
            font-size: 1.25rem;
        }

        /* Right Sidebar */
        .trending-card {
            background: white;
            border-radius: 1rem;
            box-shadow: var(--card-shadow);
            overflow: hidden;
            position: sticky;
            top: 2rem;
        }

        .trending-header {
            padding: 1.5rem;
            border-bottom: 1px solid var(--border-color);
            background: linear-gradient(135deg, var(--primary-color), var(--primary-hover));
            color: white;
        }

        .trending-list {
            padding: 1rem;
        }

        .trending-item {
            padding: 1rem;
            border-bottom: 1px solid var(--border-color);
            transition: var(--transition);
        }

        .trending-item:last-child {
            border-bottom: none;
        }

        .trending-item:hover {
            background: var(--secondary-color);
        }

        .trending-title {
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 0.25rem;
        }

        .trending-stats {
            color: var(--text-secondary);
            font-size: 0.875rem;
        }

        /* Responsive Grid Layouts */
        .media-grid-container.grid-2 {
            grid-template-columns: repeat(2, 1fr);
        }

        .media-grid-container.grid-3 {
            grid-template-columns: repeat(2, 1fr);
            grid-template-rows: repeat(2, 1fr);
        }

        .media-grid-container.grid-3 .media-item:first-child {
            grid-column: 1 / -1;
        }

        .media-grid-container.grid-4 {
            grid-template-columns: repeat(2, 1fr);
            grid-template-rows: repeat(2, 1fr);
        }

        /* Talent-specific styles */
        .talent-badge {
            background: linear-gradient(135deg, #f59e0b, #d97706);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 1rem;
            font-size: 0.75rem;
            font-weight: 600;
            margin-left: 0.5rem;
        }

        .performance-rating {
            display: flex;
            align-items: center;
            gap: 0.25rem;
            color: #f59e0b;
        }

        .performance-rating i {
            font-size: 1rem;
        }

        /* Dropdown Styles */
        .dropdown {
            position: relative;
            z-index: 1050;
        }

        .dropdown-menu {
            position: absolute;
            z-index: 1060;
            min-width: 200px;
            padding: 0.5rem 0;
            margin: 0.5rem 0;
            background-color: white;
            border: 1px solid var(--border-color);
            border-radius: 0.75rem;
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
            opacity: 0;
            visibility: hidden;
            transform: translateY(-10px);
            transition: all 0.2s ease;
        }

        .dropdown-menu.show {
            opacity: 1;
            visibility: visible;
            transform: translateY(0);
        }

        .dropdown-item {
            padding: 0.75rem 1.25rem;
            color: var(--text-primary);
            transition: var(--transition);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .dropdown-item:hover {
            background-color: var(--secondary-color);
            color: var(--primary-color);
        }

        .dropdown-item i {
            font-size: 1.25rem;
        }

        /* Fix for dropdown positioning */
        .dropdown-menu[data-bs-popper] {
            top: 100% !important;
            left: 0 !important;
            margin-top: 0.5rem !important;
        }
        
        /* Ensure dropdowns are above other content */
        .dropdown-menu.show {
            z-index: 1060 !important;
        }
        
        /* Fix for mobile responsiveness */
        @@media (max-width: 768px) {
            .main-content-container {
            padding: 1rem;
        }

            .category-sidebar {
                position: static;
                margin-bottom: 2rem;
        }

            .media-grid-container {
                gap: 0.25rem;
        }

        .dropdown-menu {
                position: fixed !important;
                top: auto !important;
                left: 50% !important;
                transform: translateX(-50%) !important;
                width: 90% !important;
                max-width: 300px;
        }

        .dropdown-menu.show {
                transform: translateX(-50%) translateY(0) !important;
        }
        }
    </style>
}

<div class="main-content-container">
    <div class="row g-4">
        <!-- Left Sidebar (Categories) -->
        <div class="col-lg-3">
            <div class="category-sidebar">
                <div class="category-card">
                    <div class="category-header">
                        <h5 class="mb-0">
                            <i class='bx bx-category me-2'></i> Talent Categories
                        </h5>
                    </div>
                        <div class="category-list">
                            <a href="@Url.Action("Index", "Posts")" class="category-item @(ViewBag.SelectedCategory == null ? "active" : "")">
                            <i class='bx bx-grid-alt'></i> All Performances
                            </a>
                            @foreach (var category in ViewBag.Categories ?? new List<SelectListItem>())
                            {
                                <a href="@Url.Action("CategoryPosts", "Posts", new { categoryId = category.Value })"
                                   class="category-item @(ViewBag.SelectedCategory?.ToString() == category.Value ? "active" : "")">
                                <i class='bx bx-category'></i> @category.Text
                                </a>
                            }
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content (Posts Feed) -->
        <div class="col-lg-6" style="position: relative; z-index: 1;">
                    @if (User.Identity.IsAuthenticated)
                    {
                <div class="post-creation-card">
                    <div class="post-creation-header">
                        <h5 class="mb-0">Share Your Talent</h5>
                </div>
                    <div class="post-creation-body">
                            <form id="createPostForm" asp-action="Create" method="post" enctype="multipart/form-data">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                                <div class="form-group mb-3">
                                <input type="text" id="titleInput" name="Title" class="form-control post-input" 
                                       placeholder="Performance Title" required />
                                    <span validation-for="Title" class="text-danger"></span>
                                </div>

                                <div class="form-group mb-3">
                                <textarea id="contentInput" name="Content" class="form-control post-input" 
                                          rows="3" placeholder="Share your talent story..."></textarea>
                                    <span validation-for="Content" class="text-danger"></span>
                                </div>

                            <div id="mediaPreview" class="row g-2 mt-2"></div>

                                <div class="d-flex justify-content-between align-items-center mt-3">
                                <div class="d-flex gap-2">
                                    <label for="imagesInput" class="media-upload-btn" data-bs-toggle="tooltip" 
                                           data-bs-placement="bottom" title="Add photos">
                                        <i class='bx bx-image'></i>
                                        <input type="file" id="imagesInput" name="Images" class="d-none" 
                                               multiple accept="image/*" />
                                        </label>
                                    <label for="videosInput" class="media-upload-btn" data-bs-toggle="tooltip" 
                                           data-bs-placement="bottom" title="Add videos">
                                            <i class='bx bx-video'></i>
                                        <input type="file" id="videosInput" name="Videos" class="d-none" 
                                               multiple accept="video/*" />
                                        </label>
                                    <div class="select-wrapper">
                                        <select class="custom-select" id="categorySelect" name="CategoryID">
                                            <option value="">Select Category</option>
                                                @foreach (var category in ViewBag.Categories ?? new List<SelectListItem>())
                                                {
                                                <option value="@category.Value">@category.Text</option>
                                                }
                                        </select>
                                        </div>
                                    <div class="select-wrapper">
                                        <select class="custom-select" id="privacySelect" name="PrivacyID">
                                                @foreach (var privacy in ViewBag.PrivacyOptions ?? new List<SelectListItem>())
                                                {
                                                <option value="@privacy.Value">@privacy.Text</option>
                                                }
                                        </select>
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-primary rounded-pill px-2">
                                    <i class='bx bx-send me-1'></i>Share
                                </button>
                                </div>
                            </form>
                        </div>
                    </div>
                }

                <div class="posts-feed">
                    @foreach (var item in Model)
                    {
                    <div class="post-card">
                        <div class="post-header">
                            <a asp-controller="UserProfile" asp-action="PublicProfile" asp-route-username="@item.Username" class="text-decoration-none d-flex align-items-center">
                                <div class="post-avatar">
                                    @if (!string.IsNullOrEmpty(item.ProfileImageURL))
                                    {
                                        <img src="@item.ProfileImageURL" alt="@item.FullName">
                                    }
                                    else
                                    {
                                        <div class="d-flex align-items-center justify-content-center h-100 bg-light rounded-circle" style="width: 3rem; height: 3rem;">
                                            <i class='bx bx-user text-primary' style="font-size: 1.5rem;"></i>
                                        </div>
                                    }
                                </div>
                                <div class="post-meta ms-3">
                                    <div class="post-author">
                                        @item.FullName
                                        @if (!string.IsNullOrEmpty(item.CategoryName))
                                        {
                                            <span class="talent-badge">@item.CategoryName</span>
                                        }
                                    </div>
                                    <div class="post-info">
                                        <span>@@@item.Username.ToLower().Replace(" ", "")</span>
                                        <span class="mx-1">·</span>
                                        <span>@item.CreatedAt.ToString("MMM dd")</span>
                                    </div>
                                </div>
                            </a>
                        </div>
                        <a asp-action="Details" asp-controller="Posts" asp-route-id="@item.PostID" class="text-decoration-none">
                            <div class="post-content">
                                <h5 class="post-title">@item.Title</h5>
                                <p class="post-text">@item.Content</p>

                                @if (item.MediaFiles != null && item.MediaFiles.Any())
                                {
                                    <div class="media-grid">
                                        @if (item.MediaFiles.Count == 1)
                                        {
                                            var media = item.MediaFiles[0];
                                            <div class="media-item">
                                                @if (media.Type == "image")
                                                {
                                                    <img src="@media.Url" alt="@item.Title">
                                                }
                                                else if (media.Type == "video")
                                                {
                                                    <video controls preload="metadata">
                                                        <source src="@media.Url" type="video/mp4">
                                                    </video>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="media-grid-container @(GetGridClass(item.MediaFiles.Count))">
                                                @foreach (var media in item.MediaFiles.Take(4))
                                        {
                                                    <div class="media-item">
                                                        @if (media.Type == "image")
                                                        {
                                                            <img src="@media.Url" alt="@item.Title">
                                                        }
                                                        else if (media.Type == "video")
                                                        {
                                                            <video controls preload="metadata">
                                                                    <source src="@media.Url" type="video/mp4">
                                                                </video>
                                                        }
                                                        @if (item.MediaFiles.Count > 4 && media == item.MediaFiles.Skip(3).First())
                                                                {
                                                            <div class="media-overlay">
                                                                +@(item.MediaFiles.Count - 4)
                                                            </div>
                                                        }
                                                    </div>
                                                }
                                                    </div>
                                                }
                                            </div>
                                        }

                                <div class="post-actions">
                                    <div class="post-action">
                                        <i class='bx bx-comment'></i>
                                        <span>@item.CommentsCount</span>
                                    </div>
                                    <div class="post-action">
                                        <i class='bx bx-repost'></i>
                                        <span>Share</span>
                                    </div>
                                    <div class="post-action">
                                        <i class='bx bx-heart'></i>
                                        <span>@item.LikesCount</span>
                                    </div>
                                    <div class="post-action">
                                        <i class='bx bx-bar-chart'></i>
                                        <span>Stats</span>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
            </div>
        </div>

        <!-- Right Sidebar -->
        <div class="col-lg-3">
            <div class="trending-card">
                <div class="trending-header">
                    <h5 class="mb-0">
                        <i class='bx bx-trending-up me-2'></i> Trending Talents
                        </h5>
                </div>
                <div class="trending-list">
                    <div class="trending-item">
                        <div class="trending-title">#DanceChallenge</div>
                        <div class="trending-stats">1.2K performances</div>
                    </div>
                    <div class="trending-item">
                        <div class="trending-title">#VocalShowcase</div>
                        <div class="trending-stats">856 performances</div>
                        </div>
                    <div class="trending-item">
                        <div class="trending-title">#MagicMasters</div>
                        <div class="trending-stats">432 performances</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetGridClass(int mediaCount)
    {
        return (mediaCount > 4 ? 4 : mediaCount) switch
        {
            2 => "grid-2",
            3 => "grid-3",
            4 => "grid-4",
            _ => "grid-4"
        };
    }
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        // Tooltip initialization
        $(function () {
            $('[data-bs-toggle="tooltip"]').tooltip();
        });

        // Preview selected images
        document.querySelector('input[name="Images"]').addEventListener('change', function (e) {
            const previewContainer = document.createElement('div');
            previewContainer.className = 'row g-2';

            Array.from(e.target.files).forEach(file => {
                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const col = document.createElement('div');
                        col.className = 'col-md-3';
                        col.innerHTML = `
                            <div class="card">
                                <img src="${e.target.result}" class="card-img-top" style="height: 150px; object-fit: cover;">
                            </div>
                        `;
                        previewContainer.appendChild(col);
                    };
                    reader.readAsDataURL(file);
                }
            });

            const existingPreview = document.querySelector('#mediaPreview');
            if (existingPreview) {
                existingPreview.innerHTML = '';
                existingPreview.appendChild(previewContainer);
            }
        });

        // Preview selected videos
        document.querySelector('input[name="Videos"]').addEventListener('change', function (e) {
            const previewContainer = document.createElement('div');
            previewContainer.className = 'row g-2';

            Array.from(e.target.files).forEach(file => {
                if (file.type.startsWith('video/')) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const col = document.createElement('div');
                        col.className = 'col-md-6';
                        col.innerHTML = `
                            <div class="card">
                                <video src="${e.target.result}" class="card-img-top" style="height: 200px; object-fit: cover;" controls></video>
                            </div>
                        `;
                        previewContainer.appendChild(col);
                    };
                    reader.readAsDataURL(file);
                }
            });

            const existingPreview = document.querySelector('#mediaPreview');
            if (existingPreview) {
                existingPreview.innerHTML = '';
                existingPreview.appendChild(previewContainer);
            }
        });
    </script>
}