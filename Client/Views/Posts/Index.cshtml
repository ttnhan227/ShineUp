@model IEnumerable<Client.Models.PostListViewModel>

@{
    ViewData["Title"] = "Posts";
}

@section Styles {
    <link href='https://cdn.jsdelivr.net/npm/boxicons@1.9.2/css/boxicons.min.css' rel='stylesheet'>
    <style>
        .newsfeed-user-card {
            border: none;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            border-radius: 15px;
            overflow: hidden;
        }

        .category-list {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .category-item {
            display: flex;
            align-items: center;
            padding: 0.75rem 1rem;
            color: #525f7f;
            text-decoration: none;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .category-item:hover {
            background-color: #f8f9fa;
            color: #5e72e4;
        }

        .category-item.active {
            background-color: #5e72e4;
            color: white;
        }

        .category-item i {
            margin-right: 0.5rem;
            font-size: 1.2rem;
        }

        .post-card {
            border: none;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            border-radius: 15px;
            overflow: hidden;
            transition: transform 0.3s ease;
        }

        .post-card:hover {
            transform: translateY(-5px);
        }

        .media-grid {
            width: 100%;
            background: #f8f9fa;
        }

        .media-item {
            position: relative;
            width: 100%;
            height: 0;
            padding-bottom: 56.25%; /* 16:9 aspect ratio */
            overflow: hidden;
        }

        .media-item img,
        .media-item video {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .media-grid-container {
            display: grid;
            gap: 2px;
            background: #f8f9fa;
        }

        /* Grid layouts for different numbers of media items */
        .media-grid-container.grid-2 {
            grid-template-columns: repeat(2, 1fr);
            grid-template-rows: repeat(1, 1fr);
        }

        .media-grid-container.grid-3 {
            grid-template-columns: repeat(2, 1fr);
            grid-template-rows: repeat(2, 1fr);
        }

        .media-grid-container.grid-3 .media-item:first-child {
            grid-column: 1 / -1;
        }

        .media-grid-container.grid-4 {
            grid-template-columns: repeat(2, 1fr);
            grid-template-rows: repeat(2, 1fr);
        }

        .media-grid-container .media-item {
            padding-bottom: 100%; /* 1:1 aspect ratio for grid items */
        }

        .media-item.overlay::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
        }

        .media-count-overlay {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: white;
            font-size: 1.5rem;
            font-weight: bold;
            z-index: 2;
        }

        .video-container {
            position: relative;
            width: 100%;
            height: 100%;
            background: #000;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .video-container video {
            width: 100%;
            height: 100%;
            object-fit: cover;
            background: #000;
            position: absolute;
            top: 0;
            left: 0;
        }

        .video-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            background: rgba(0, 0, 0, 0.3);
            color: white;
            font-size: 3rem;
            opacity: 0;
            transition: opacity 0.3s ease;
            pointer-events: none;
            z-index: 2;
        }

        .video-container:hover .video-overlay {
            opacity: 1;
        }

        /* Add styles for single video display */
        .media-item.single .video-container {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }

        .media-item.single .video-container video {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        /* Grid video styles */
        .media-grid-container .video-container {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }

        .media-grid-container .video-container video {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .post-meta {
            margin: 1rem 0;
            color: #8898aa;
            font-size: 0.9rem;
        }

        .post-title {
            color: #2d3748;
            font-size: 1.25rem;
            line-height: 1.4;
            margin-top: 0.5rem;
            transition: color 0.2s ease;
        }

        .post-title:hover {
            color: #5e72e4;
        }

        .post-text {
            color: #4a5568;
            font-size: 1rem;
            line-height: 1.6;
        }

        .post-stats {
            color: #8898aa;
            font-size: 0.9rem;
            margin-top: 1rem;
        }

        .card-footer {
            background-color: #fff;
            border-top: 1px solid #e9ecef;
            padding: 1rem;
        }

        .btn-primary {
            background-color: #5e72e4;
            border-color: #5e72e4;
        }

        .btn-primary:hover {
            background-color: #4a5cd1;
            border-color: #4a5cd1;
        }
    </style>
}

<div class="main-content-container">
    <div class="row">
        <!-- Left Sidebar (Categories) -->
        <div class="col-md-3">
            <div class="p-3">
                <div class="card newsfeed-user-card h-100 border-0 shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title mb-4 fw-bold">
                            <i class='bx bx-category me-2'></i> Categories
                        </h5>
                        <div class="category-list">
                            <a href="@Url.Action("Index", "Posts")" class="category-item @(ViewBag.SelectedCategory == null ? "active" : "")">
                                <i class='bx bx-grid-alt me-2'></i> All Posts
                            </a>
                            @foreach (var category in ViewBag.Categories ?? new List<SelectListItem>())
                            {
                                <a href="@Url.Action("CategoryPosts", "Posts", new { categoryId = category.Value })"
                                   class="category-item @(ViewBag.SelectedCategory?.ToString() == category.Value ? "active" : "")">
                                    <i class='bx bx-category me-2'></i> @category.Text
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content (Posts Feed) -->
        <div class="col-md-6"> @* Adjusted to col-md-6 and removed offset for better centering *@
            <div class="p-3">
                <div class="d-flex justify-content-between align-items-center mb-3 border-bottom"> @* Added padding and border-bottom *@
                    @if (User.Identity.IsAuthenticated)
                    {
                        @* Removed the create post button from here *@
                    }
                </div>

                @if (User.Identity.IsAuthenticated)
                {
                     <div class="card post-card mb-4">
                        <div class="card-body">
                            <h5 class="card-title mb-3 text-muted">What's happening?</h5>
                            <form id="createPostForm" asp-action="Create" method="post" enctype="multipart/form-data">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                                <div class="form-group mb-3">
                                    <input type="text" id="titleInput" name="Title" class="form-control" placeholder="Title" required />
                                    <span validation-for="Title" class="text-danger"></span>
                                </div>

                                <div class="form-group mb-3">
                                    <textarea id="contentInput" name="Content" class="form-control" rows="3" placeholder="What's on your mind?"></textarea>
                                    <span validation-for="Content" class="text-danger"></span>
                                </div>

                                 @* Placeholder for media previews *@
                                <div id="mediaPreview" class="row mt-2"></div>

                                <div class="d-flex justify-content-between align-items-center mt-3">
                                    <div>
                                        <label for="imagesInput" class="btn btn-outline-primary btn-sm rounded-circle me-2" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Add photos">
                                            <i class='bx bx-image-add'></i>
                                            <input type="file" id="imagesInput" name="Images" class="d-none" multiple accept="image/*" />
                                        </label>
                                        <label for="videosInput" class="btn btn-outline-success btn-sm rounded-circle" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Add videos">
                                            <i class='bx bx-video-plus'></i>
                                            <input type="file" id="videosInput" name="Videos" class="d-none" multiple accept="video/*" />
                                        </label>
                                         @* Add dropdowns for Category and Privacy *@
                                         <div class="dropdown d-inline-block">
                                            <button class="btn btn-outline-secondary btn-sm rounded-pill dropdown-toggle ms-2" type="button" id="categoryDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                                Category
                                            </button>
                                            <ul class="dropdown-menu" aria-labelledby="categoryDropdown">
                                                 <li><a class="dropdown-item" href="#" data-value="">-- Select Category --</a></li>
                                                @foreach (var category in ViewBag.Categories ?? new List<SelectListItem>())
                                                {
                                                    <li><a class="dropdown-item" href="#" data-value="@category.Value">@category.Text</a></li>
                                                }
                                            </ul>
                                            <input type="hidden" name="CategoryID" id="selectedCategoryID" value="" />
                                        </div>

                                         <div class="dropdown d-inline-block">
                                            <button class="btn btn-outline-secondary btn-sm rounded-pill dropdown-toggle ms-2" type="button" id="privacyDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                                Privacy
                                            </button>
                                            <ul class="dropdown-menu" aria-labelledby="privacyDropdown">
                                                @foreach (var privacy in ViewBag.PrivacyOptions ?? new List<SelectListItem>())
                                                {
                                                    <li><a class="dropdown-item" href="#" data-value="@privacy.Value">@privacy.Text</a></li>
                                                }
                                            </ul>
                                             <input type="hidden" name="PrivacyID" id="selectedPrivacyID" value="1" /> @* Default to Public (1) *@
                                        </div>
                                    </div>
                                    <button type="submit" class="btn btn-primary rounded-pill px-4 py-2 fw-bold">Post</button>
                                </div>

                                 @* Hidden fields for other post properties if needed, or handle via JS/ViewModel *@
                             </form>
                         </div>
                     </div>
                }

                <div class="posts-feed"> @* New container for posts to apply consistent styling *@
                    @foreach (var item in Model)
                    {
                        <div class="post-card border-bottom py-3 px-3"> @* Removed col-12 mb-3, added border-bottom, padding *@
                            <a asp-action="Details" asp-controller="Posts" asp-route-id="@item.PostID" class="post-link text-decoration-none text-dark"> @* Changed class to post-link, removed card-link, added text styles *@
                                <div class="d-flex align-items-start"> @* Use flexbox for avatar and content *@
                                    <div class="post-avatar me-3">
                                        @if (!string.IsNullOrEmpty(item.ProfileImageURL))
                                        {
                                            <img src="@item.ProfileImageURL" class="rounded-circle" style="width: 48px; height: 48px; object-fit: cover;" alt="Profile Image">
                                        }
                                        else
                                        {
                                            <div class="rounded-circle d-flex align-items-center justify-content-center" style="width: 48px; height: 48px; background-color: #f8f9fa;">
                                                <i class='bx bx-user' style="font-size: 2rem; color: #5e72e4;"></i>
                                            </div>
                                        }
                                    </div>
                                    <div class="post-content flex-grow-1">
                                        <div class="post-meta d-flex align-items-center mb-1"> @* Adjusted margin-bottom *@
                                            <span class="fw-bold me-1">@item.UserName</span> @* User Name *@
                                            <span class="text-muted me-1">@@@item.UserName.ToLower().Replace(" ", "")</span> @* User Handle (simplified) *@
                                            <span class="text-muted">&middot;</span>
                                            <span class="text-muted ms-1">@item.CreatedAt.ToString("MMM dd")</span>
                                            @if (!string.IsNullOrEmpty(item.CategoryName))
                                            {
                                                <span class="text-muted ms-1">&middot;</span>
                                                <span class="text-muted ms-1">@item.CategoryName</span>
                                            }
                                        </div>

                                        <h5 class="post-title mb-2 fw-bold">@item.Title</h5>
                                        <p class="post-text mb-2">@item.Content</p>

                                        @if (item.MediaFiles != null && item.MediaFiles.Any())
                                        {
                                            <div class="media-grid mt-2 mb-2">
                                                @if (item.MediaFiles.Count == 1)
                                                {
                                                    var media = item.MediaFiles[0];
                                                    <div class="media-item single rounded-3 overflow-hidden">
                                                        @if (media.Type == "image")
                                                        {
                                                            <img src="@media.Url" class="img-fluid" alt="@item.Title">
                                                        }
                                                        else if (media.Type == "video")
                                                        {
                                                            <div class="video-container">
                                                                <video controls preload="metadata" class="w-100 h-100">
                                                                    <source src="@media.Url" type="video/mp4">
                                                                    Your browser does not support the video tag.
                                                                </video>
                                                            </div>
                                                        }
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="media-grid-container @(GetGridClass(item.MediaFiles.Count)) rounded-3 overflow-hidden">
                                                        @foreach (var media in item.MediaFiles.Take(4))
                                                        {
                                                            <div class="media-item @(item.MediaFiles.Count > 4 && media == item.MediaFiles.Skip(3).First() ? "overlay" : "")">
                                                                @if (media.Type == "image")
                                                                {
                                                                    <img src="@media.Url" class="img-fluid" alt="@item.Title">
                                                                }
                                                                else if (media.Type == "video")
                                                                {
                                                                    <div class="video-container">
                                                                        <video controls preload="metadata" class="w-100 h-100">
                                                                            <source src="@media.Url" type="video/mp4">
                                                                            Your browser does not support the video tag.
                                                                        </video>
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                    </div>
                                                }
                                                @if (item.MediaFiles.Count > 4)
                                                {
                                                    <div class="media-count-overlay d-flex align-items-center justify-content-center rounded-3">
                                                        +@(item.MediaFiles.Count - 4)
                                                    </div>
                                                }
                                            </div>
                                        }

                                        <div class="post-stats d-flex justify-content-around mt-2">
                                            <span class="d-flex align-items-center">
                                                <i class='bx bx-comment me-1'></i> @item.CommentsCount
                                            </span>
                                            <span class="d-flex align-items-center">
                                                <i class='bx bx-repost me-1'></i>
                                            </span>
                                            <span class="d-flex align-items-center">
                                                <i class='bx bx-heart me-1'></i> @item.LikesCount
                                            </span>
                                            <span class="d-flex align-items-center">
                                                <i class='bx bx-bar-chart me-1'></i>
                                            </span>
                                            <span class="d-flex align-items-center">
                                                <i class='bx bx-upload me-1'></i>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Right Sidebar (Placeholder) -->
        <div class="col-md-3">
            <div class="p-3">
                <div class="card h-100 border-0 shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title mb-4 fw-bold">
                            <i class='bx bx-search me-2'></i> Search
                        </h5>
                        <div class="mb-3">
                            <input type="text" class="form-control rounded-pill" placeholder="Search Twitter">
                        </div>
                        <h5 class="card-title mb-4 fw-bold mt-4">
                            <i class='bx bx-trending-up me-2'></i> Trends for you
                        </h5>
                        <ul class="list-unstyled">
                            <li class="mb-2">#TrendingTopic1 <span class="text-muted d-block">100K Posts</span></li>
                            <li class="mb-2">#TrendingTopic2 <span class="text-muted d-block">50K Posts</span></li>
                            <li class="mb-2">#TrendingTopic3 <span class="text-muted d-block">20K Posts</span></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetGridClass(int mediaCount)
    {
        // Grid classes based on number of items (up to 4 for layout purposes)
        return (mediaCount > 4 ? 4 : mediaCount) switch // Use min of mediaCount and 4
        {
            2 => "grid-2",
            3 => "grid-3",
            4 => "grid-4",
            _ => "grid-4" // Default to grid-4 for any other case with multiple items
        };
    }
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
         // Tooltip initialization
         $(function () {
             $('[data-bs-toggle="tooltip"]').tooltip();
         })

         // Handle dropdown selection for Category
         $('#categoryDropdown + .dropdown-menu a').on('click', function(e) {
             e.preventDefault();
             var selectedValue = $(this).data('value');
             var selectedText = $(this).text();
             $('#selectedCategoryID').val(selectedValue);
             $('#categoryDropdown').text('Category: ' + selectedText);
         });

         // Handle dropdown selection for Privacy
         $('#privacyDropdown + .dropdown-menu a').on('click', function(e) {
             e.preventDefault();
             var selectedValue = $(this).data('value');
             var selectedText = $(this).text();
             $('#selectedPrivacyID').val(selectedValue);
             $('#privacyDropdown').text('Privacy: ' + selectedText);
         });

        // Preview selected images
        document.querySelector('input[name="Images"]').addEventListener('change', function(e) {
            const previewContainer = document.createElement('div');
            previewContainer.className = 'row mt-2';
            
            Array.from(e.target.files).forEach(file => {
                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const col = document.createElement('div');
                        col.className = 'col-md-3 mb-2';
                        col.innerHTML = `
                            <div class="card">
                                <img src="${e.target.result}" class="card-img-top" style="height: 150px; object-fit: cover;">
                            </div>
                        `;
                        previewContainer.appendChild(col);
                    }
                    reader.readAsDataURL(file);
                }
            });

            const existingPreview = document.querySelector('#mediaPreview');
            if (existingPreview) {
                existingPreview.innerHTML = ''; // Clear previous previews
                existingPreview.appendChild(previewContainer);
            }
        });

        // Preview selected videos
        document.querySelector('input[name="Videos"]').addEventListener('change', function(e) {
            const previewContainer = document.createElement('div');
            previewContainer.className = 'row mt-2';
            
            Array.from(e.target.files).forEach(file => {
                if (file.type.startsWith('video/')) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const col = document.createElement('div');
                        col.className = 'col-md-6 mb-2';
                        col.innerHTML = `
                            <div class="card">
                                <video src="${e.target.result}" class="card-img-top" style="height: 200px; object-fit: cover;" controls></video>
                            </div>
                        `;
                        previewContainer.appendChild(col);
                    }
                    reader.readAsDataURL(file);
                }
            });

            const existingPreview = document.querySelector('#mediaPreview');
            if (existingPreview) {
                 existingPreview.innerHTML = ''; // Clear previous previews
                 existingPreview.appendChild(previewContainer);
            }
        });
    </script>
}
