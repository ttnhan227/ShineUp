@model Client.Models.PostViewModel

@{
    ViewData["Title"] = Model.Title;
}

<div class="container-fluid">
    <div class="row">
        <!-- Main Content -->
        <div class="col-md-8 mx-auto">
            <div class="card post-detail-card">
                @if (!string.IsNullOrEmpty(Model.ImageURL))
                {
                    <img src="@Model.ImageURL" class="card-img-top post-detail-image" alt="@Model.Title">
                }
                <div class="card-body">
                    <div class="post-header">
                        <h1 class="post-title">@Model.Title</h1>
                        <div class="post-meta">
                            <div class="d-flex align-items-center mb-3">
                                <i class='bx bx-user'></i>
                                <span class="ms-2">@Model.Username</span>
                            </div>
                            <div class="d-flex align-items-center mb-3">
                                <i class='bx bx-time'></i>
                                <span class="ms-2">@Model.CreatedAt.ToString("MMM dd, yyyy")</span>
                            </div>
                            @if (!string.IsNullOrEmpty(Model.CategoryName))
                            {
                                <div class="d-flex align-items-center mb-3">
                                    <i class='bx bx-category'></i>
                                    <span class="ms-2">@Model.CategoryName</span>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.PrivacyName))
                            {
                                <div class="d-flex align-items-center mb-3">
                                    <i class='bx bx-lock-alt'></i>
                                    <span class="ms-2">@Model.PrivacyName</span>
                                </div>
                            }
                        </div>
                    </div>

                    <div class="post-content">
                        @Model.Content
                    </div>

                    <div class="post-stats">
                        <span class="me-4">
                            <i class='bx bx-heart'></i> @Model.LikesCount Likes
                        </span>
                        <span>
                            <i class='bx bx-comment'></i> @Model.CommentsCount Comments
                        </span>
                    </div>

                    <div class="post-actions mt-4">
                        @if (User.Identity.IsAuthenticated && User.FindFirst("id")?.Value == Model.UserID.ToString())
                        {
                            <a asp-action="Edit" asp-route-id="@Model.PostID" class="btn btn-primary me-2">
                                <i class='bx bx-edit'></i> Edit
                            </a>
                            <form asp-action="Delete" asp-route-id="@Model.PostID" method="post" class="d-inline" 
                                  onsubmit="return confirm('Are you sure you want to delete this post?');">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-danger">
                                    <i class='bx bx-trash'></i> Delete
                                </button>
                            </form>
                        }
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class='bx bx-arrow-back'></i> Back to List
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link href='https://cdn.jsdelivr.net/npm/boxicons@1.9.2/css/boxicons.min.css' rel='stylesheet'>
    <style>
        .post-detail-card {
            border: none;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            border-radius: 15px;
            overflow: hidden;
            margin-bottom: 2rem;
        }

        .post-detail-image {
            width: 100%;
            max-height: 400px;
            object-fit: cover;
        }

        .post-header {
            margin-bottom: 2rem;
        }

        .post-title {
            font-size: 2rem;
            color: #32325d;
            margin-bottom: 1rem;
        }

        .post-meta {
            color: #8898aa;
            font-size: 0.9rem;
        }

        .post-content {
            font-size: 1.1rem;
            line-height: 1.8;
            color: #525f7f;
            margin-bottom: 2rem;
        }

        .post-stats {
            color: #8898aa;
            font-size: 1rem;
            padding: 1rem 0;
            border-top: 1px solid #e9ecef;
            border-bottom: 1px solid #e9ecef;
        }

        .post-actions {
            display: flex;
            gap: 0.5rem;
        }

        .btn-primary {
            background-color: #5e72e4;
            border-color: #5e72e4;
        }

        .btn-primary:hover {
            background-color: #4a5cd1;
            border-color: #4a5cd1;
        }

        .btn-secondary {
            background-color: #8898aa;
            border-color: #8898aa;
        }

        .btn-secondary:hover {
            background-color: #6c757d;
            border-color: #6c757d;
        }

        .btn-danger {
            background-color: #f5365c;
            border-color: #f5365c;
        }

        .btn-danger:hover {
            background-color: #dc3545;
            border-color: #dc3545;
        }
    </style>
} 