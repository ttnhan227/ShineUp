@model Client.Models.PostDetailsViewModel

@{
    ViewData["Title"] = Model.Title;
}

@section Styles {
    <link href='https://cdn.jsdelivr.net/npm/boxicons@1.9.2/css/boxicons.min.css' rel='stylesheet'>
    <style>
        :root {
            --primary-color: #7c3aed;
            --primary-hover: #6d28d9;
            --secondary-color: #f3f4f6;
            --text-primary: #1f2937;
            --text-secondary: #6b7280;
            --border-color: #e5e7eb;
            --card-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            --transition: all 0.3s ease;
        }

        body {
            background-color: #f9fafb;
            color: var(--text-primary);
        }

        .main-content-container {
            max-width: 1200px; /* Adjust container width for details page */
            margin: 0 auto;
            padding: 2rem 1rem;
        }

        /* Post Card Styles (Copied from Index.cshtml) */
        .post-card {
            background: white;
            border-radius: 1rem;
            box-shadow: var(--card-shadow);
            margin-bottom: 2rem;
            overflow: hidden;
            transition: var(--transition);
            position: relative;
            z-index: 1030;
        }

        .post-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
        }

        .post-header {
            padding: 1.5rem;
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .post-avatar {
            width: 3rem;
            height: 3rem;
            border-radius: 50%;
            overflow: hidden;
            border: 2px solid var(--primary-color);
        }

        .post-avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .post-meta {
            flex: 1;
        }

        .post-author {
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 0.25rem;
             display: flex;
             align-items: center;
             gap: 0.5rem;
        }

        .post-info {
            color: var(--text-secondary);
            font-size: 0.875rem;
        }

         .post-info span {
             margin-right: 0.5rem;
         }

        /* Post Content */
        .post-content {
            padding: 0 1.5rem 1.5rem;
        }

        .post-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 0.75rem;
        }

        .post-text {
            color: var(--text-secondary);
            line-height: 1.6;
            margin-bottom: 1rem;
        }

        /* Media Grid Styles (Copied from Index.cshtml) */
        .media-grid {
            border-radius: 0.75rem;
            overflow: hidden;
            margin: 1rem 0;
        }

        .media-grid-container {
            display: grid;
            gap: 0.5rem;
            background: var(--secondary-color);
        }

        .media-item {
            position: relative;
            border-radius: 0.5rem;
            overflow: hidden;
            aspect-ratio: 16/9;
        }

        .media-item img,
        .media-item video {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .media-overlay {
            position: absolute;
            inset: 0;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.5rem;
            opacity: 0;
            transition: var(--transition);
        }

        .media-item:hover .media-overlay {
            opacity: 1;
        }

        /* Post Actions (Copied from Index.cshtml) */
        .post-actions {
            padding: 1rem 1.5rem;
            border-top: 1px solid var(--border-color);
            display: flex;
            justify-content: space-around;
            align-items: center;
        }

        .post-action {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: var(--text-secondary);
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            transition: var(--transition);
            cursor: pointer;
        }

        .post-action:hover {
            background: var(--secondary-color);
            color: var(--primary-color);
        }

        .post-action i {
            font-size: 1.25rem;
        }

         /* Right Sidebar (Trending/Search Placeholder) - Styles already present */
        .sidebar-card {
            background: white;
            border-radius: 1rem;
            box-shadow: var(--card-shadow);
            overflow: hidden;
             padding: 1.5rem;
        }

        .sidebar-card .card-title {
             font-size: 1.25rem;
             font-weight: 600;
             color: var(--text-primary);
             margin-bottom: 1.5rem;
             display: flex;
             align-items: center;
        }

        .sidebar-card .form-control {
             border-radius: 1.5rem;
             padding: 0.75rem 1.5rem;
             background-color: var(--secondary-color);
             border-color: transparent;
        }

        .sidebar-card .form-control:focus {
             background-color: white;
             border-color: var(--primary-color);
        }

         .sidebar-card .list-unstyled li {
             padding: 0.75rem 0;
             border-bottom: 1px solid var(--border-color);
             transition: var(--transition);
             cursor: pointer;
         }

         .sidebar-card .list-unstyled li:last-child {
             border-bottom: none;
         }

         .sidebar-card .list-unstyled li:hover {
              background-color: var(--secondary-color);
              padding-left: 0.5rem;
         }

         .sidebar-card .list-unstyled li span {
             font-size: 0.875rem;
             color: var(--text-secondary);
         }

        /* Button Styles (Copied from Index.cshtml) */
        .btn-secondary {
            background: var(--secondary-color);
            border-color: var(--secondary-color);
            color: var(--text-primary);
            border-radius: 0.75rem;
            padding: 0.75rem 1.5rem;
            transition: var(--transition);
             margin-top: 1rem;
        }

        .btn-secondary:hover {
             background: #e0e0e0;
             border-color: #e0e0e0;
             color: var(--text-primary);
             transform: translateY(-2px);
        }

        /* Dropdown for Post Actions */
        .dropdown-toggle::after {
            display: none; /* Hide default caret */
        }

         .dropdown-menu {
            border-radius: 0.75rem;
            box-shadow: var(--card-shadow);
             padding: 0.5rem 0;
        }

         .dropdown-item {
             padding: 0.75rem 1.25rem;
             color: var(--text-primary);
             transition: var(--transition);
             display: flex;
             align-items: center;
             gap: 0.5rem;
         }

        .dropdown-item:hover {
            background-color: var(--secondary-color);
            color: var(--primary-color);
        }

        .dropdown-item i {
             font-size: 1.25rem;
        }

        .dropdown-item.text-danger:hover {
             background-color: #fee2e2; /* Light red background on hover */
             color: #dc2626; /* Darker red text on hover */
        }

        /* Talent-specific styles (Copied from Index.cshtml) */
        .talent-badge {
            background: linear-gradient(135deg, #f59e0b, #d97706);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 1rem;
            font-size: 0.75rem;
            font-weight: 600;
            margin-left: 0.5rem;
        }

        .performance-rating {
            display: flex;
            align-items: center;
            gap: 0.25rem;
            color: #f59e0b;
        }

        .performance-rating i {
            font-size: 1rem;
        }

    </style>
}

<div class="main-content-container">
    <div class="row g-4">
        <!-- Main Content (Single Post) -->
        <div class="col-lg-6 offset-lg-3">
            <div class="post-card">
                @* Replicate post header from Index.cshtml, adapting for PostDetailsViewModel *@
                 <div class="post-header">
                    <div class="post-avatar">
                        @if (!string.IsNullOrEmpty(Model.ProfileImageURL))
                        {
                            <img src="@Model.ProfileImageURL" alt="Profile Image">
                        }
                        else
                        {
                            <div class="d-flex align-items-center justify-content-center h-100 bg-light">
                                <i class='bx bx-user'></i>
                            </div>
                        }
                    </div>
                    <div class="post-meta flex-grow-1">
                        <div class="post-author">
                             @Model.FullName
                             @if (!string.IsNullOrEmpty(Model.CategoryName))
                             {
                                 <span class="talent-badge">@Model.CategoryName</span>
                             }
                        </div>
                        <div class="post-info">
                            <span>@@@Model.Username.ToLower().Replace(" ", "")</span>
                            <span class="mx-1">·</span>
                            <span>@Model.CreatedAt.ToString("MMM dd")</span>
                             @if (!string.IsNullOrEmpty(Model.PrivacyName))
                             {
                                 <span class="mx-1">·</span>
                                 <span>@Model.PrivacyName</span>
                             }
                        </div>
                    </div>
                    @* Post Actions Dropdown (Edit/Delete) - Keep this for details view *@
                    @if (User.Identity.IsAuthenticated && User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == Model.UserID.ToString())
                    {
                        <div class="dropdown">
                            <button class="btn btn-light btn-sm rounded-circle" type="button" id="postActionsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class='bx bx-dots-horizontal-rounded'></i>
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="postActionsDropdown">
                                <li><a class="dropdown-item" asp-action="Edit" asp-route-id="@Model.PostID"><i class='bx bx-edit me-2'></i>Edit</a></li>
                                <li>
                                    <form asp-action="Delete" asp-route-id="@Model.PostID" method="post" onsubmit="return confirm('Are you sure you want to delete this post?');">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="dropdown-item text-danger"><i class='bx bx-trash me-2'></i>Delete</button>
                                    </form>
                                </li>
                            </ul>
                        </div>
                    }
                </div>

                @* Replicate post content from Index.cshtml *@
                <div class="post-content">
                    <h5 class="post-title">@Model.Title</h5>
                    <p class="post-text">@Model.Content</p>

                    @* Replicate media display logic from Index.cshtml *@
                    @if (Model.MediaFiles != null && Model.MediaFiles.Any())
                    {
                        <div class="media-grid">
                            @if (Model.MediaFiles.Count == 1)
                            {
                                var media = Model.MediaFiles[0];
                                <div class="media-item rounded-3 overflow-hidden">
                                    @if (media.Type == "image")
                                    {
                                        <img src="@media.Url" alt="@Model.Title">
                                    }
                                    else if (media.Type == "video")
                                    {
                                        <div class="video-container">
                                            <video controls preload="metadata">
                                                <source src="@media.Url" type="video/mp4">
                                                Your browser does not support the video tag.
                                            </video>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="media-grid-container @(GetGridClass(Model.MediaFiles.Count)) rounded-3 overflow-hidden">
                                    @foreach (var media in Model.MediaFiles.Take(4))
                                    {
                                        <div class="media-item @(Model.MediaFiles.Count > 4 && media == Model.MediaFiles.Skip(3).First() ? "overlay" : "")">
                                            @if (media.Type == "image")
                                            {
                                                <img src="@media.Url" alt="@Model.Title">
                                            }
                                            else if (media.Type == "video")
                                            {
                                                <div class="video-container">
                                                    <video controls preload="metadata">
                                                        <source src="@media.Url" type="video/mp4">
                                                        Your browser does not support the video tag.
                                                    </video>
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                            }
                            @if (Model.MediaFiles.Count > 4)
                            {
                                <div class="media-count-overlay d-flex align-items-center justify-content-center rounded-3">
                                    +@(Model.MediaFiles.Count - 4)
                                </div>
                            }
                        </div>
                    }

                    @* Replicate post actions from Index.cshtml - removed the Share icon as it's duplicated *@
                    <div class="post-actions">
                        <div class="post-action">
                            <i class='bx bx-comment'></i>
                            <span>@Model.CommentsCount</span>
                        </div>
                        <div class="post-action">
                            <i class='bx bx-repost'></i>
                            <span>Share</span>
                        </div>
                        <div class="post-action">
                            <i class='bx bx-heart'></i>
                            <span>@Model.LikesCount</span>
                        </div>
                        <div class="post-action">
                            <i class='bx bx-bar-chart'></i>
                            <span>Stats</span>
                        </div>
                    </div>

                     @* Add comments section here if needed *@
                     @* Example comments section placeholder - can be developed further *@
                     <div class="comments-section mt-4 pt-4 border-top">
                         <h5>Comments</h5>
                         <div class="comment mb-3">
                             <div class="d-flex align-items-start">
                                 <div class="post-avatar me-3" style="width: 2rem; height: 2rem;">
                                     <div class="d-flex align-items-center justify-content-center h-100 bg-light">
                                         <i class='bx bx-user'></i>
                                     </div>
                                 </div>
                                 <div class="comment-content">
                                     <div class="comment-author fw-bold">Commenter Name</div>
                                     <div class="comment-text text-secondary">This is a sample comment.</div>
                                 </div>
                             </div>
                         </div>
                          @* Add form for new comments here if needed *@
                     </div>

                </div>
            </div>
            @* Back to List Button *@
             <a asp-action="Index" class="btn btn-secondary mt-3">
                 <i class='bx bx-arrow-back me-1'></i>Back to List
            </a>
        </div>

         <!-- Right Sidebar (Search and Trending) -->
        <div class="col-lg-3">
            <div class="sidebar-card">
                <h5 class="card-title">
                    <i class='bx bx-search me-2'></i> Search
                </h5>
                <div class="mb-3">
                    <input type="text" class="form-control" placeholder="Search Posts">
                </div>
                <h5 class="card-title mt-4">
                    <i class='bx bx-trending-up me-2'></i> Trending Talents
                </h5>
                <ul class="list-unstyled">
                    <li class="mb-2">
                        #DanceChallenge
                        <span class="d-block">1.2K performances</span>
                    </li>
                    <li class="mb-2">
                        #VocalShowcase
                        <span class="d-block">856 performances</span>
                    </li>
                    <li class="mb-2">
                        #MagicMasters
                        <span class="d-block">432 performances</span>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetGridClass(int mediaCount)
    {
        return (mediaCount > 4 ? 4 : mediaCount) switch
        {
            2 => "grid-2",
            3 => "grid-3",
            4 => "grid-4",
            _ => "grid-4"
        };
    }
} 