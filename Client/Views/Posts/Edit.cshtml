@model Client.Models.EditPostViewModel

@{
    ViewData["Title"] = "Edit Post";
}

@section Styles {
    <link href='https://cdn.jsdelivr.net/npm/boxicons@1.9.2/css/boxicons.min.css' rel='stylesheet'>
    <style>
        :root {
            --primary-color: #7c3aed;
            --primary-hover: #6d28d9;
            --secondary-color: #f3f4f6;
            --text-primary: #1f2937;
            --text-secondary: #6b7280;
            --border-color: #e5e7eb;
            --card-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            --transition: all 0.3s ease;
        }

        body {
            background-color: #f9fafb;
            color: var(--text-primary);
        }

        .container {
            max-width: 900px; /* Adjust container width for the edit page */
        }

        /* Post Card Styles */
        .post-card {
            background: white;
            border-radius: 1rem;
            box-shadow: var(--card-shadow);
            overflow: hidden;
            transition: var(--transition);
        }

        .post-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
        }

        .card-header {
             padding: 1.5rem;
             border-bottom: 1px solid var(--border-color);
             background: linear-gradient(135deg, var(--primary-color), var(--primary-hover));
             color: white;
        }

        .card-body {
            padding: 1.5rem;
        }

        /* Form Group Styles */
        .form-group label {
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 0.5rem;
            display: block;
        }

        .form-control {
            border: 2px solid var(--border-color);
            border-radius: 0.75rem;
            padding: 1rem;
            transition: var(--transition);
        }

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(124, 58, 237, 0.1);
        }

        /* Select Box Styles */
        .select-wrapper {
            position: relative;
            display: inline-block;
            width: 100%; /* Make select wrapper take full width in form */
        }

        .select-wrapper::after {
            content: '\ea4a';
            font-family: 'boxicons';
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-secondary);
            pointer-events: none;
            transition: var(--transition);
        }

        .select-wrapper:hover::after {
            color: var(--primary-color);
        }

        .custom-select {
            appearance: none;
            background: var(--secondary-color);
            border: none;
            border-radius: 0.75rem;
            padding: 0.75rem 2.5rem 0.75rem 1rem;
            color: var(--text-secondary);
            font-size: 0.875rem;
            cursor: pointer;
            transition: var(--transition);
            width: 100%; /* Make select take full width in form */
        }

        .custom-select:hover {
            background: var(--primary-color);
            color: white;
        }

        .custom-select:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(124, 58, 237, 0.1);
        }

        .custom-select option {
            background: white;
            color: var(--text-primary);
            padding: 0.5rem;
        }

        /* Media Upload Styles */
        .media-upload-group .control-label i {
             margin-right: 0.5rem;
        }

        /* Media Grid Styles */
        .media-grid {
            border-radius: 0.75rem;
            overflow: hidden;
            margin-top: 1rem;
            margin-bottom: 1rem;
        }

        .media-grid-container {
            display: grid;
            gap: 0.5rem;
            background: var(--secondary-color);
        }

        .media-item {
            position: relative;
            border-radius: 0.5rem;
            overflow: hidden;
            aspect-ratio: 16/9;
        }

        .media-item img,
        .media-item video {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .media-count-overlay {
            position: absolute;
            inset: 0;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.5rem;
            font-weight: bold;
        }

        /* Responsive Grid Layouts */
        .media-grid-container.grid-2 {
            grid-template-columns: repeat(2, 1fr);
        }

        .media-grid-container.grid-3 {
            grid-template-columns: repeat(2, 1fr);
            grid-template-rows: repeat(2, 1fr);
        }

        .media-grid-container.grid-3 .media-item:first-child {
            grid-column: 1 / -1;
        }

        .media-grid-container.grid-4 {
            grid-template-columns: repeat(2, 1fr);
            grid-template-rows: repeat(2, 1fr);
        }

        /* Button Styles */
        .btn-primary {
            background: var(--primary-color);
            border-color: var(--primary-color);
            border-radius: 0.75rem;
            padding: 0.75rem 1.5rem;
            transition: var(--transition);
        }

        .btn-primary:hover {
            background: var(--primary-hover);
            border-color: var(--primary-hover);
            transform: translateY(-2px);
        }

        .btn-secondary {
            background: var(--secondary-color);
            border-color: var(--secondary-color);
            color: var(--text-primary);
            border-radius: 0.75rem;
            padding: 0.75rem 1.5rem;
            transition: var(--transition);
        }

        .btn-secondary:hover {
             background: #e0e0e0;
             border-color: #e0e0e0;
             color: var(--text-primary);
             transform: translateY(-2px);
        }

         .text-danger {
             font-size: 0.875rem;
         }

        /* Preview Card Styles */
        .preview-card {
            border: 1px solid var(--border-color);
            border-radius: 0.75rem;
            overflow: hidden;
        }

        .preview-card img, .preview-card video {
            display: block;
            width: 100%;
            height: auto;
        }

    </style>
}

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card post-card">
            <div class="card-header">
                <h3 class="mb-0">
                    <i class='bx bx-edit me-2'></i>Edit Post
                </h3>
            </div>
            <div class="card-body">
                <form asp-action="Edit" method="post" enctype="multipart/form-data">
                    <input type="hidden" asp-for="PostID" />
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                    <div class="form-group mb-3">
                        <label asp-for="Title" class="control-label">
                            <i class='bx bx-pencil me-1'></i>Title
                        </label>
                        <input asp-for="Title" class="form-control" />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Content" class="control-label">
                            <i class='bx bx-text me-1'></i>Content
                        </label>
                        <textarea asp-for="Content" class="form-control" rows="5"></textarea>
                        <span asp-validation-for="Content" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="CategoryID" class="control-label">
                            <i class='bx bx-category me-1'></i>Category
                        </label>
                        <div class="select-wrapper">
                            <select asp-for="CategoryID" class="custom-select" asp-items="ViewBag.Categories">
                                <option value="">-- Select Category --</option>
                            </select>
                        </div>
                        <span asp-validation-for="CategoryID" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="PrivacyID" class="control-label">
                            <i class='bx bx-lock-alt me-1'></i>Privacy
                        </label>
                         <div class="select-wrapper">
                            <select asp-for="PrivacyID" class="custom-select" asp-items="ViewBag.PrivacyOptions">
                                <option value="1">Public</option>
                            </select>
                        </div>
                        <span asp-validation-for="PrivacyID" class="text-danger"></span>
                    </div>

                    @if (Model.CurrentMediaFiles != null && Model.CurrentMediaFiles.Any())
                    {
                        <div class="form-group mb-3 media-upload-group">
                            <label class="control-label">
                                <i class='bx bx-image me-1'></i>Current Media
                            </label>
                            <div class="media-grid">
                                @if (Model.CurrentMediaFiles.Count == 1)
                                {
                                    var media = Model.CurrentMediaFiles[0];
                                    <div class="media-item rounded-3 overflow-hidden">
                                        @if (media.Type == "image")
                                        {
                                            <img src="@media.Url" alt="Media">
                                        }
                                        else if (media.Type == "video")
                                        {
                                            <div class="video-container">
                                                <video controls preload="metadata">
                                                    <source src="@media.Url" type="video/mp4">
                                                    Your browser does not support the video tag.
                                                </video>
                                            </div>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div class="media-grid-container @(GetGridClass(Model.CurrentMediaFiles.Count)) rounded-3 overflow-hidden">
                                        @foreach (var media in Model.CurrentMediaFiles.Take(4))
                                        {
                                            <div class="media-item @(Model.CurrentMediaFiles.Count > 4 && media == Model.CurrentMediaFiles.Skip(3).First() ? "overlay" : "")">
                                                @if (media.Type == "image")
                                                {
                                                    <img src="@media.Url" alt="Media">
                                                }
                                                else if (media.Type == "video")
                                                {
                                                    <div class="video-container">
                                                        <video controls preload="metadata">
                                                            <source src="@media.Url" type="video/mp4">
                                                            Your browser does not support the video tag.
                                                        </video>
                                                    </div>
                                                }
                                            </div>
                                        }
                                    </div>
                                }
                                @if (Model.CurrentMediaFiles.Count > 4)
                                {
                                    <div class="media-count-overlay d-flex align-items-center justify-content-center rounded-3">
                                        +@(Model.CurrentMediaFiles.Count - 4)
                                    </div>
                                }
                            </div>
                        </div>
                    }

                    <div class="form-group mb-3 media-upload-group">
                        <label class="control-label">
                            <i class='bx bx-image-add me-1'></i>New Images
                        </label>
                        <input type="file" name="Images" class="form-control" multiple accept="image/*" />
                        <small class="form-text text-muted">You can select multiple images</small>
                         <div class="row mt-2" id="imagePreview"></div>
                    </div>

                    <div class="form-group mb-3 media-upload-group">
                        <label class="control-label">
                            <i class='bx bx-video-plus me-1'></i>New Videos
                        </label>
                        <input type="file" name="Videos" class="form-control" multiple accept="video/*" />
                        <small class="form-text text-muted">You can select multiple videos</small>
                         <div class="row mt-2" id="videoPreview"></div>
                    </div>

                    <div class="form-group mt-4">
                        <button type="submit" class="btn btn-primary">
                            <i class='bx bx-save me-1'></i>Save Changes
                        </button>
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class='bx bx-arrow-back me-1'></i>Back to List
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        // Preview selected images
        document.querySelector('input[name="Images"]').addEventListener('change', function(e) {
            const previewContainer = document.getElementById('imagePreview');
            previewContainer.innerHTML = ''; // Clear previous previews

            Array.from(e.target.files).forEach(file => {
                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const col = document.createElement('div');
                        col.className = 'col-md-3 mb-2';
                        col.innerHTML = `
                            <div class="card preview-card">
                                <img src="${e.target.result}" class="card-img-top" style="height: 150px; object-fit: cover;">
                            </div>
                        `;
                        previewContainer.appendChild(col);
                    }
                    reader.readAsDataURL(file);
                }
            });
        });

        // Preview selected videos
        document.querySelector('input[name="Videos"]').addEventListener('change', function(e) {
            const previewContainer = document.getElementById('videoPreview');
             previewContainer.innerHTML = ''; // Clear previous previews

            Array.from(e.target.files).forEach(file => {
                if (file.type.startsWith('video/')) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const col = document.createElement('div');
                        col.className = 'col-md-6 mb-2';
                        col.innerHTML = `
                            <div class="card preview-card">
                                <video src="${e.target.result}" class="card-img-top" style="height: 200px; object-fit: cover;" controls></video>
                            </div>
                        `;
                        previewContainer.appendChild(col);
                    }
                    reader.readAsDataURL(file);
                } else if (file.type.startsWith('image/')) {
                         // Optionally handle image previews here if needed, or keep separate
                    }
            });
        });

    </script>
}

@functions {
    string GetGridClass(int count)
    {
        return count switch
        {
            2 => "grid-2",
            3 => "grid-3",
            _ => "grid-4"
        };
    }
} 