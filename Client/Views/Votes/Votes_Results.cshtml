@{
    ViewData["Title"] = "Vote Results";
    var results = ViewBag.Results as List<dynamic>;
}

<div class="container mt-4">
    <h2 class="mb-4 text-primary">Vote Results</h2>

    @if (results == null || results.Count == 0)
    {
        <div class="alert alert-info">No results available for this contest.</div>
    }
    else
    {
        <table class="table table-bordered shadow-sm">
            <thead class="table-dark">
                <tr>
                    <th>#</th>
                    <th>Entry ID</th>
                    <th>Total Votes</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < results.Count; i++)
                {
                    <tr>
                        <td>@(i + 1)</td>
                        <td>@results[i].entryID</td>
                        <td>@results[i].voteCount</td>
                    </tr>
                }
            </tbody>
        </table>

        <canvas id="voteChart" width="600" height="300" class="mt-4"></canvas>
    }
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const labels = @Html.Raw(Json.Serialize(results.Select(r => "Entry " + r.entryID)));
        const data = @Html.Raw(Json.Serialize(results.Select(r => r.voteCount)));

        const ctx = document.getElementById('voteChart');
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Votes',
                    data: data,
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: { beginAtZero: true }
                }
            }
        });
    </script>
}
