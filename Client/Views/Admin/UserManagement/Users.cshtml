@model IEnumerable<Client.Models.UserViewModel>
@{
    ViewData["Title"] = "User Management";
}

<div class="container-fluid">
    <div class="row">
        <!-- Main Content -->
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h2 class="mb-4">User Management</h2>
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>UserID</th>
                                    <th>Username</th>
                                    <th>Email</th>
                                    <th>Role</th>
                                    <th>Talent Area</th>
                                    <th>Status</th>
                                    <th>Created At</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                            @if (Model != null)
                            {
                                foreach (var user in Model)
                                {
                                    <tr>
                                        <td>@user.UserID</td>
                                        <td>@user.Username</td>
                                        <td>@user.Email</td>
                                        <td>@(user.RoleID == 2 ? "Admin" : "User")</td>
                                        <td>@user.TalentArea</td>
                                        <td>
                                            <div class="d-flex gap-2">
                                                <div class="form-check form-switch">
                                                    <input class="form-check-input" type="checkbox" 
                                                           id="isActive_@user.UserID" 
                                                           @(user.IsActive ? "checked" : "")
                                                           onchange="updateUserStatus(@user.UserID, 'isActive', this.checked)">
                                                    <label class="form-check-label" for="isActive_@user.UserID">
                                                        Active
                                                    </label>
                                                </div>
                                                <div class="form-check form-switch">
                                                    <input class="form-check-input" type="checkbox" 
                                                           id="verified_@user.UserID" 
                                                           @(user.Verified ? "checked" : "")
                                                           onchange="updateUserStatus(@user.UserID, 'verified', this.checked)">
                                                    <label class="form-check-label" for="verified_@user.UserID">
                                                        Verified
                                                    </label>
                                                </div>
                                            </div>
                                        </td>
                                        <td>@user.CreatedAt?.ToString("yyyy-MM-dd")</td>
                                        <td>
                                            <div class="button-group">
                                                <a asp-action="EditUser" asp-route-id="@user.UserID" class="btn btn-primary">
                                                    <i class='bx bx-edit'></i> Edit
                                                </a>
                                                <a asp-action="DeleteUser" asp-route-id="@user.UserID" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this user?');">
                                                    <i class='bx bx-trash'></i> Delete
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link href='https://cdn.jsdelivr.net/npm/boxicons@1.9.2/css/boxicons.min.css' rel='stylesheet'>
    <style>
        .card {
            border: none;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            border-radius: 15px;
            overflow: hidden;
        }

        .table {
            margin-bottom: 0;
        }

        .table th {
            font-weight: 600;
            color: #32325d;
            border-bottom: 2px solid #e9ecef;
        }

        .table td {
            vertical-align: middle;
            color: #525f7f;
        }

        .button-group {
            display: flex;
            gap: 0.5rem;
        }

        .button-group .btn {
            padding: 0.5rem 1rem;
            font-size: 0.875rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
            border-radius: 8px;
        }

        .button-group .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .btn-primary {
            background: #5e72e4;
            border: none;
        }

        .btn-danger {
            background: #f5365c;
            border: none;
        }

        .form-check-input:checked {
            background-color: #5e72e4;
            border-color: #5e72e4;
        }

        .form-check-label {
            color: #525f7f;
            font-size: 0.875rem;
        }

        .table-responsive {
            border-radius: 10px;
            overflow: hidden;
        }

        .table-hover tbody tr:hover {
            background-color: #f8f9fa;
        }

        .alert {
            border-radius: 10px;
            padding: 1rem;
            margin-bottom: 1.5rem;
            border: none;
        }

        .alert-success {
            background-color: #d4edda;
            color: #155724;
        }

        .alert-danger {
            background-color: #f8d7da;
            color: #721c24;
        }

        @@media (max-width: 768px) {
            .button-group {
                flex-direction: column;
            }

            .button-group .btn {
                width: 100%;
                justify-content: center;
            }
        }
    </style>

    <script>
        function updateUserStatus(userId, field, value) {
            fetch(`/Admin/UpdateUserStatus/${userId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    field: field,
                    value: value
                })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                // Show success message
                alert('User status updated successfully');
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error updating user status');
                // Revert the checkbox
                const checkbox = document.getElementById(`${field}_${userId}`);
                checkbox.checked = !value;
            });
        }
    </script>
}
