@using System.Security.Claims
@model Client.Models.OpportunityApplicationViewModel
@{
    ViewData["Title"] = "Application Details";
    var isOwner = User.Identity.IsAuthenticated && User.FindFirst(ClaimTypes.NameIdentifier)?.Value == Model.UserID.ToString();
}

<div class="container mt-4">
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-action="MyApplications">My Applications</a></li>
            <li class="breadcrumb-item active" aria-current="page">Application Details</li>
        </ol>
    </nav>

    <div class="row">
        <div class="col-lg-8">
            <div class="card mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-start mb-4">
                        <div>
                            <h2 class="h4 mb-1">Application for @Model.TalentOpportunityTitle</h2>
                            <p class="text-muted mb-0">
                                Applied on @Model.AppliedAt.ToString("MMMM d, yyyy")
                                @if (Model.ReviewedAt.HasValue)
                                {
                                    <span class="mx-2">â€¢</span>
                                    <span>Reviewed on @Model.ReviewedAt.Value.ToString("MMMM d, yyyy")</span>
                                }
                            </p>
                        </div>
                        <div class="dropdown">
                            <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" id="applicationActions" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-three-dots"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="applicationActions">
                                <li>
                                    <a class="dropdown-item" asp-action="Details" asp-controller="Opportunities" asp-route-id="@Model.TalentOpportunityID">
                                        <i class="bi bi-eye me-2"></i>View Opportunity
                                    </a>
                                </li>
                                @if (isOwner && Model.Status == ApplicationStatus.Pending)
                                {
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <a class="dropdown-item text-danger" href="#" data-bs-toggle="modal" data-bs-target="#withdrawModal">
                                            <i class="bi bi-x-circle me-2"></i>Withdraw Application
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>

                    <div class="mb-4">
                        <h5 class="mb-3">Application Status</h5>
                        <div class="d-flex align-items-center mb-3">
                            <div class="me-3">
                                @if (Model.Status == ApplicationStatus.Pending)
                                {
                                    <span class="badge bg-warning text-dark">@Model.Status.ToString()</span>
                                }
                                else if (Model.Status == ApplicationStatus.Approved)
                                {
                                    <span class="badge bg-success">@Model.Status.ToString()</span>
                                }
                                else if (Model.Status == ApplicationStatus.Rejected)
                                {
                                    <span class="badge bg-danger">@Model.Status.ToString()</span>
                                }
                                else if (Model.Status == ApplicationStatus.Shortlisted)
                                {
                                    <span class="badge bg-info">@Model.Status.ToString()</span>
                                }
                                else if (Model.Status == ApplicationStatus.Withdrawn)
                                {
                                    <span class="badge bg-secondary">@Model.Status.ToString()</span>
                                }
                            </div>
                            <p class="mb-0 text-muted">
                                @if (Model.Status == ApplicationStatus.Pending)
                                {
                                    <text>Your application is under review by the opportunity poster.</text>
                                }
                                else if (Model.Status == ApplicationStatus.Approved)
                                {
                                    <text>Congratulations! Your application has been approved.</text>
                                }
                                else if (Model.Status == ApplicationStatus.Rejected)
                                {
                                    <text>We're sorry, but your application wasn't selected this time.</text>
                                }
                                else if (Model.Status == ApplicationStatus.Shortlisted)
                                {
                                    <text>Your application has been shortlisted.</text>
                                }
                                else if (Model.Status == ApplicationStatus.Withdrawn)
                                {
                                    <text>Your application has been withdrawn.</text>
                                }
                            </p>
                        </div>
                    </div>
                        </div>
                    </div>

                    @if (!string.IsNullOrEmpty(Model.CoverLetter))
                    {
                        <div class="mb-4">
                            <h5 class="mb-3">Your Cover Letter</h5>
                            <div class="p-3 bg-light rounded">
                                @Html.Raw(Model.CoverLetter.Replace("\n", "<br/>"))
                            </div>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(Model.ReviewNotes))
                    {
                        <div class="border-top pt-4">
                            <h5 class="mb-3">Reviewer's Notes</h5>
                            <div class="p-3 bg-light rounded">
                                @Html.Raw(Model.ReviewNotes.Replace("\n", "<br/>"))
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card mb-4">
                <div class="card-body">
                    <h5 class="card-title mb-3">Application Timeline</h5>
                    <div class="timeline">
                        <div class="timeline-item">
                            <div class="timeline-marker bg-primary"></div>
                            <div class="timeline-content">
                                <h6 class="mb-1">Application Submitted</h6>
                                <p class="text-muted small mb-0">@Model.AppliedAt.ToString("MMMM d, yyyy h:mm tt")</p>
                            </div>
                        </div>
                        
                        @if (Model.ReviewedAt.HasValue)
                        {
                            <div class="timeline-item">
                                <div class="timeline-marker @(Model.Status == ApplicationStatus.Approved ? "bg-success" : 
                                                               Model.Status == ApplicationStatus.Rejected ? "bg-danger" : 
                                                               Model.Status == ApplicationStatus.Shortlisted ? "bg-info" : 
                                                               Model.Status == ApplicationStatus.Withdrawn ? "bg-secondary" : "bg-warning") ">
                                </div>
                                <div class="timeline-content">
                                    <h6 class="mb-1">
                                        @if (Model.Status == ApplicationStatus.Approved)
                                        {
                                            <i class="bi bi-check-circle-fill text-success me-1"></i>
                                        }
                                        else if (Model.Status == ApplicationStatus.Rejected)
                                        {
                                            <i class="bi bi-x-circle-fill text-danger me-1"></i>
                                        }
                                        else if (Model.Status == ApplicationStatus.Shortlisted)
                                        {
                                            <i class="bi bi-star-fill text-info me-1"></i>
                                        }
                                        else if (Model.Status == ApplicationStatus.Withdrawn)
                                        {
                                            <i class="bi bi-arrow-counterclockwise text-secondary me-1"></i>
                                        }
                                        else
                                        {
                                            <i class="bi bi-hourglass-split text-warning me-1"></i>
                                        }
                                        @Model.Status
                                    </h6>
                                    <p class="text-muted small mb-0">@Model.ReviewedAt.Value.ToString("MMMM d, yyyy h:mm tt")</p>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="timeline-item">
                                <div class="timeline-marker"></div>
                                <div class="timeline-content">
                                    <h6 class="mb-1">Application Under Review</h6>
                                    <p class="text-muted small mb-0">Your application is being reviewed</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <h5 class="card-title mb-3">Opportunity Details</h5>
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                            <span><i class="bi bi-briefcase me-2"></i>Type</span>
                            <span class="text-muted">@Model.TalentOpportunityTitle</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                            <span><i class="bi bi-calendar-check me-2"></i>Applied On</span>
                            <span class="text-muted">@Model.AppliedAt.ToString("MMMM d, yyyy")</span>
                        </li>
                        @if (Model.ReviewedAt.HasValue)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                                <span><i class="bi bi-check-circle me-2"></i>Status Updated</span>
                                <span class="text-muted">@Model.ReviewedAt.Value.ToString("MMMM d, yyyy")</span>
                            </li>
                        }
                    </ul>
                    <div class="mt-3">
                        <a asp-action="Details" asp-controller="Opportunities" asp-route-id="@Model.TalentOpportunityID" class="btn btn-outline-primary w-100">
                            <i class="bi bi-eye me-1"></i> View Opportunity
                        </a>
                    </div>
                </div>
            </div>
        </div>


<!-- Withdraw Application Modal -->
<div class="modal fade" id="withdrawModal" tabindex="-1" aria-labelledby="withdrawModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="withdrawModalLabel">Withdraw Application</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to withdraw your application for "@Model.TalentOpportunityTitle"?</p>
                <p class="text-muted">This action cannot be undone. You'll need to reapply if you change your mind.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                <form asp-action="WithdrawApplication" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.ApplicationID" />
                    <button type="submit" class="btn btn-danger">Withdraw Application</button>
                </form>
            </div>
        </div>
    </div>
</div>

}
