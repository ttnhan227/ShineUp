@model Client.Models.OpportunityViewModel

@{
    ViewData["Title"] = Model.Title;
}

<div class="main-content-container">
    <div class="row">
        <!-- Main Content -->
        <div class="col-lg-8 mx-auto">
            <!-- Back Button -->
            <a href="javascript:history.back()" class="btn btn-outline-secondary mb-4">
                <i class='bx bx-arrow-back'></i> Back to Opportunities
            </a>
            
            <!-- Opportunity Card -->
            <div class="card mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-start mb-3">
                        <div>
                            <h1 class="h3 mb-2">@Model.Title</h1>
                            <div class="d-flex align-items-center text-muted mb-3">
                                <span class="badge bg-primary me-2">@Model.Type</span>
                                @if (Model.IsRemote)
                                {
                                    <span class="me-2"><i class='bx bx-globe'></i> Remote</span>
                                }
                                else if (!string.IsNullOrEmpty(Model.Location))
                                {
                                    <span class="me-2"><i class='bx bx-map'></i> @Model.Location</span>
                                }
                                <span class="me-2">â€¢</span>
                                <span>Posted @(DateTime.UtcNow.Subtract(Model.CreatedAt).Days > 0 ? $"{DateTime.UtcNow.Subtract(Model.CreatedAt).Days} days ago" : "Today")</span>
                            </div>
                        </div>
                        <span class="badge bg-@(Model.Status == OpportunityStatus.Open ? "success" : "secondary") text-uppercase">
                            @Model.Status
                        </span>
                    </div>
                    
                    @if (Model.ApplicationDeadline.HasValue)
                    {
                        <div class="alert alert-info">
                            <div class="d-flex align-items-center">
                                <i class='bx bx-time me-2'></i>
                                <div>
                                    <strong>Deadline:</strong> @Model.ApplicationDeadline.Value.ToString("MMMM dd, yyyy")
                                    @if (Model.ApplicationDeadline.Value.Date < DateTime.UtcNow.Date)
                                    {
                                        <span class="badge bg-danger ms-2">Closed</span>
                                    }
                                    else if ((Model.ApplicationDeadline.Value - DateTime.UtcNow).TotalDays <= 7)
                                    {
                                        <span class="badge bg-warning text-dark ms-2">Ending soon</span>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                    
                    @if (!string.IsNullOrEmpty(Model.TalentArea))
                    {
                        <div class="mb-4">
                            <span class="badge bg-light text-dark border">@Model.TalentArea</span>
                        </div>
                    }
                    
                    <div class="mb-4">
                        <h5 class="mb-3">Opportunity Details</h5>
                        <div class="opportunity-content">
                            @Html.Raw(Model.Description.Replace("\n", "<br />"))
                        </div>
                    </div>
                    
                    <div class="d-flex gap-2 mt-4">
                        @if (Model.PostedByUserId.ToString() == User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value)
                        {
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary">
                                <i class='bx bx-edit'></i> Edit
                            </a>
                            <a asp-action="Applications" asp-route-opportunityId="@Model.Id" class="btn btn-outline-secondary">
                                <i class='bx bx-list-ul'></i> View Applications (@Model.ApplicationCount)
                            </a>
                        }
                        else if (Model.Status == OpportunityStatus.Open && 
                                Model.ApplicationDeadline?.Date >= DateTime.UtcNow.Date)
                        {
                            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#applyModal">
                                <i class='bx bx-edit-alt'></i> Apply Now
                            </button>
                        }
                    </div>
                </div>
            </div>
            
            <!-- Posted By Section -->
            <div class="card mb-4">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-shrink-0">
                            <img src="@(string.IsNullOrEmpty(Model.PostedByUserImage) ? "/img/default-avatar.png" : Model.PostedByUserImage)" 
                                 alt="@Model.PostedByUserName" class="rounded-circle" width="60" height="60">
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h6 class="mb-0">Posted by</h6>
                            <p class="mb-1 fw-bold">@Model.PostedByUserName</p>
                            <a href="#" class="btn btn-sm btn-outline-primary">View Profile</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Apply Modal -->
<div class="modal fade" id="applyModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Apply for @Model.Title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="Apply" asp-route-opportunityId="@Model.Id" method="post">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="coverLetter" class="form-label">Cover Letter</label>
                        <textarea class="form-control" id="coverLetter" name="CoverLetter" rows="5" 
                                  placeholder="Tell us why you're the perfect fit for this opportunity..." required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Submit Application</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .opportunity-content {
            line-height: 1.8;
        }
        
        .opportunity-content img {
            max-width: 100%;
            height: auto;
            border-radius: 0.5rem;
            margin: 1rem 0;
        }
        
        .opportunity-content h1, 
        .opportunity-content h2, 
        .opportunity-content h3, 
        .opportunity-content h4, 
        .opportunity-content h5, 
        .opportunity-content h6 {
            margin-top: 1.5rem;
            margin-bottom: 1rem;
        }
        
        .opportunity-content ul, 
        .opportunity-content ol {
            padding-left: 1.5rem;
            margin-bottom: 1rem;
        }
        
        .opportunity-content a {
            color: #0d6efd;
            text-decoration: none;
        }
        
        .opportunity-content a:hover {
            text-decoration: underline;
        }
    </style>
}

@section Scripts {
    <script>
        // Initialize any tooltips
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });
    </script>
}
