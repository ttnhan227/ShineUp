@{
    ViewData["Title"] = "ChatBot";
    Layout = null;
}

<script>
    // L·∫•y userId t·ª´ ViewData truy·ªÅn v√†o
    const currentUserId = '@ViewData["UserId"]';
    const chatStorageKey = 'chatbot-history-' + currentUserId;
</script>

<!-- ChatBot Toggle Button -->
<div id="chatbot-toggle" onclick="toggleChatbot()">üí¨</div>

<!-- ChatBot Box -->
<div id="chatbot-box" style="display:none;">
    <div id="chat-header">ChatBot</div>
    <div id="chat-messages"></div>
    <div id="chat-loading" style="display:none;">‚è≥ Bot is typing...</div>
    <div id="chat-input">
        <input type="text" id="user-input" placeholder="Type a message..." />
        <button id="send-btn">Send</button>
    </div>
</div>

<!-- Styles -->
<style>
    /* Gi·ªØ nguy√™n to√†n b·ªô style c≈© */
    #chatbot-toggle {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background: #007bff;
        color: white;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 24px;
        cursor: pointer;
        z-index: 1000;
    }

    #chatbot-box {
        position: fixed;
        bottom: 80px;
        right: 20px;
        width: 320px;
        max-height: 500px;
        background: #fff;
        border: 1px solid #ccc;
        border-radius: 12px;
        display: flex;
        flex-direction: column;
        box-shadow: 0 0 15px rgba(0,0,0,0.2);
        z-index: 999;
    }

    #chat-header {
        background: #007bff;
        color: #fff;
        padding: 12px;
        font-weight: bold;
        text-align: center;
        border-radius: 12px 12px 0 0;
    }

    #chat-messages {
        flex: 1;
        overflow-y: auto;
        padding: 12px;
        font-size: 14px;
    }

    .user-message, .bot-message {
        margin: 6px 0;
        padding: 8px 12px;
        border-radius: 15px;
        max-width: 75%;
        word-wrap: break-word;
    }

    .user-message {
        background-color: #d1e7dd;
        align-self: flex-end;
        margin-left: auto;
    }

    .bot-message {
        background-color: #f8d7da;
        align-self: flex-start;
        margin-right: auto;
    }

    #chat-input {
        display: flex;
        border-top: 1px solid #ccc;
    }

    #user-input {
        flex: 1;
        border: none;
        padding: 10px;
        font-size: 14px;
        outline: none;
    }

    #send-btn {
        background: #007bff;
        color: white;
        border: none;
        padding: 10px 16px;
        font-weight: bold;
        cursor: pointer;
    }

    #chat-loading {
        text-align: center;
        font-style: italic;
        font-size: 13px;
        padding: 5px;
        color: gray;
    }
</style>

<!-- JavaScript -->
<script>
    document.addEventListener("DOMContentLoaded", () => {
        document.getElementById("send-btn").addEventListener("click", sendMessage);
        document.getElementById("user-input").addEventListener("keypress", function (e) {
            if (e.key === 'Enter') sendMessage();
        });
    });

    function toggleChatbot() {
        const box = document.getElementById('chatbot-box');
        box.style.display = box.style.display === 'none' ? 'flex' : 'none';
        if (box.style.display === 'flex') loadChatHistory();
    }

    function appendMessage(message, type) {
        const msgContainer = document.getElementById('chat-messages');
        const msgDiv = document.createElement('div');
        msgDiv.className = `${type}-message`;
        msgDiv.innerHTML = message.replace(/\n/g, '<br>');
        msgContainer.appendChild(msgDiv);
        msgContainer.scrollTop = msgContainer.scrollHeight;
    }

    async function sendMessage() {
        const input = document.getElementById('user-input');
        const text = input.value.trim();
        if (!text) return;

        appendMessage(text, 'user');
        saveMessage(text, 'user');
        input.value = '';

        const loading = document.getElementById('chat-loading');
        loading.style.display = 'block';

        try {
            const response = await fetch('/ChatBot/Ask', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ message: text })
            });

            if (!response.ok) throw new Error("Bot unavailable.");

            const data = await response.json();
            const reply = data.reply || "No response from bot.";
            appendMessage(reply, 'bot');
            saveMessage(reply, 'bot');

        } catch (err) {
            const errMsg = "‚ùå Unable to contact the chatbot.";
            appendMessage(errMsg, 'bot');
            saveMessage(errMsg, 'bot');
        } finally {
            loading.style.display = 'none';
        }
    }

    function saveMessage(text, type) {
        if (!currentUserId) return; // Kh√¥ng l∆∞u n·∫øu kh√¥ng c√≥ userId

        const history = JSON.parse(localStorage.getItem(chatStorageKey) || '[]');
        history.push({ text, type });
        localStorage.setItem(chatStorageKey, JSON.stringify(history));
    }

    function loadChatHistory() {
        if (!currentUserId) return;

        const history = JSON.parse(localStorage.getItem(chatStorageKey) || '[]');
        const container = document.getElementById('chat-messages');
        container.innerHTML = '';
        history.forEach(m => appendMessage(m.text, m.type));
    }
</script>
