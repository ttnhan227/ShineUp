@model Client.Models.ProfileViewModel

@{
ViewData["Title"] = "Edit Profile";
}

<div class="profile-container">
    <div class="row g-4">
        <div class="col-md-3">
            <div class="profile-details-card h-100">
                <div class="card-header">
                    <h3><i class='bx bx-user-circle'></i> Profile Preview</h3>
                </div>
                <div class="card-body text-center">
                    <div class="preview-avatar mb-3 mx-auto position-relative" id="profileImageTrigger">
                        <div class="image-overlay">
                            <i class='bx bx-camera'></i> Change Profile Image
                        </div>
                        @if (!string.IsNullOrEmpty(Model.ProfileImageURL))
                        {
                        <img src="@Model.ProfileImageURL" alt="@Model.Username's profile image" id="profileImagePreview">
                        }
                        else
                        {
                        <div class="avatar-placeholder">
                            <i class='bx bx-user'></i>
                        </div>
                        }
                    </div>
                    <div class="profile-meta">
                        <h5 class="post-author">@Model.Username</h5>
                        @if (!string.IsNullOrEmpty(Model.TalentArea))
                        {
                        <span class="talent-badge">@Model.TalentArea</span>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-9">
            <div class="profile-details-card">
                <div class="card-header position-relative">
                    <h3><i class='bx bx-edit'></i> Edit Profile</h3>
                    <div class="cover-image-container" id="coverImageTrigger">
                        @if (!string.IsNullOrEmpty(Model.CoverPhotoUrl))
                        {
                        <img src="@Model.CoverPhotoUrl" alt="Cover photo" id="coverImagePreview">
                        }
                        else
                        {
                        <div class="cover-placeholder">No Cover Photo</div>
                        }
                        <div class="cover-overlay">
                            <i class='bx bx-camera'></i> Change Cover Photo
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    @if (TempData["SuccessMessage"] != null)
                    {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        @TempData["SuccessMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                    }

                    <form asp-action="Edit" method="post" enctype="multipart/form-data">
                        <div class="info-group mb-4">
                            <label asp-for="Username" class="form-label">
                                <i class='bx bx-user'></i> Username
                            </label>
                            <div class="info-value">@Model.Username</div>
                            <input type="hidden" asp-for="Username" />
                            <span asp-validation-for="Username" class="text-danger"></span>
                        </div>

                        <div class="info-group mb-4">
                            <label asp-for="FullName" class="form-label">
                                <i class='bx bx-user'></i> Full Name
                            </label>
                            <input asp-for="FullName" class="form-control" />
                            <span asp-validation-for="FullName" class="text-danger"></span>
                        </div>

                        <div class="info-group mb-4">
                            <label asp-for="Email" class="form-label">
                                <i class='bx bx-envelope'></i> Email
                            </label>
                            <input asp-for="Email" class="form-control" />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="info-group mb-4">
                            <label asp-for="Bio" class="form-label">
                                <i class='bx bx-info-circle'></i> Bio
                            </label>
                            <textarea asp-for="Bio" class="form-control" rows="4"></textarea>
                            <span asp-validation-for="Bio" class="text-danger"></span>
                        </div>

                        <div class="info-group mb-4">
                            <label asp-for="TalentArea" class="form-label">
                                <i class='bx bx-star'></i> Talent Area
                            </label>
                            <input asp-for="TalentArea" class="form-control" />
                            <span asp-validation-for="TalentArea" class="text-danger"></span>
                        </div>

                        <div class="info-group mb-4">
                            <label asp-for="ProfilePrivacy" class="form-label">
                                <i class='bx bx-lock-alt'></i> Profile Privacy
                            </label>
                            <select asp-for="ProfilePrivacy" class="custom-select">
                                <option value="0">Public</option>
                                <option value="1">Friends Only</option>
                                <option value="2">Private</option>
                            </select>
                            <span asp-validation-for="ProfilePrivacy" class="text-danger"></span>
                        </div>

                        <div class="info-group mb-4 d-none">
                            <input asp-for="ProfileImageFile" type="file" class="form-control" id="profileImageInput" accept="image/*" />
                            <span asp-validation-for="ProfileImageFile" class="text-danger"></span>
                        </div>

                        <div class="info-group mb-4 d-none">
                            <input asp-for="CoverPhotoFile" type="file" class="form-control" id="coverImageInput" accept="image/*" />
                            <span asp-validation-for="CoverPhotoFile" class="text-danger"></span>
                        </div>

                        <div class="info-group mb-4">
                            <label asp-for="InstagramUrl" class="form-label">
                                <i class='bx bxl-instagram'></i> Instagram URL
                            </label>
                            <input asp-for="InstagramUrl" class="form-control" type="url" />
                            <span asp-validation-for="InstagramUrl" class="text-danger"></span>
                        </div>

                        <div class="info-group mb-4">
                            <label asp-for="YouTubeUrl" class="form-label">
                                <i class='bx bxl-youtube'></i> YouTube URL
                            </label>
                            <input asp-for="YouTubeUrl" class="form-control" type="url" />
                            <span asp-validation-for="YouTubeUrl" class="text-danger"></span>
                        </div>

                        <div class="info-group mb-4">
                            <label asp-for="TwitterUrl" class="form-label">
                                <i class='bx bxl-twitter'></i> Twitter URL
                            </label>
                            <input asp-for="TwitterUrl" class="form-control" type="url" />
                            <span asp-validation-for="TwitterUrl" class="text-danger"></span>
                        </div>

                        <div class="card-footer">
                            <button type="submit" class="btn btn-primary">
                                <i class='bx bx-save'></i> Save Changes
                            </button>
                            <a asp-action="PublicProfile" asp-route-username="@Model.Username" class="btn btn-secondary">
                                <i class='bx bx-x'></i> Cancel
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="image-selection-panel" id="imageSelectionPanel">
        <div class="panel-header">
            <h3 id="panelTitle">Change Image</h3>
            <button class="close-panel" id="closePanel">Ã—</button>
        </div>
        <div class="panel-body">
            <img id="panelPreview" src="" class="panel-preview" alt="Image preview">
            <input type="file" class="form-control" id="panelImageInput" accept="image/*" />
        </div>
        <div class="panel-footer">
            <button type="button" class="btn btn-primary" id="panelSave">Save</button>
            <button type="button" class="btn btn-secondary" id="panelCancel">Cancel</button>
        </div>
    </div>
</div>

@section Scripts {
@await Html.PartialAsync("_ValidationScriptsPartial")
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const profileImageTrigger = document.getElementById('profileImageTrigger');
        const coverImageTrigger = document.getElementById('coverImageTrigger');
        const panel = document.getElementById('imageSelectionPanel');
        const panelTitle = document.getElementById('panelTitle');
        const panelPreview = document.getElementById('panelPreview');
        const panelImageInput = document.getElementById('panelImageInput');
        const panelSave = document.getElementById('panelSave');
        const panelCancel = document.getElementById('closePanel');
        const panelCancelBtn = document.getElementById('panelCancel');
        const profileImageInput = document.getElementById('profileImageInput');
        const coverImageInput = document.getElementById('coverImageInput');
        const profileImagePreview = document.getElementById('profileImagePreview');
        const coverImagePreview = document.getElementById('coverImagePreview');

        let currentPreviewSrc = ''; // Store the preview data URL

        function openPanel(type, previewSrc) {
            panelTitle.textContent = type === 'profile' ? 'Change Profile Image' : 'Change Cover Photo';
            panelPreview.src = previewSrc || '';
            currentPreviewSrc = previewSrc || '';
            panel.classList.add('open');
            panelImageInput.value = '';
        }

        function closePanel() {
            panel.classList.remove('open');
            panelPreview.src = '';
            panelImageInput.value = '';
            currentPreviewSrc = '';
        }

        profileImageTrigger.addEventListener('click', function () {
            openPanel('profile', profileImagePreview ? profileImagePreview.src : '');
        });

        coverImageTrigger.addEventListener('click', function () {
            openPanel('cover', coverImagePreview ? coverImagePreview.src : '');
        });

        panelImageInput.addEventListener('change', function (e) {
            const file = e.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    panelPreview.src = e.target.result;
                    currentPreviewSrc = e.target.result; // Store the data URL
                };
                reader.readAsDataURL(file);
            }
        });

        panelSave.addEventListener('click', function () {
            if (panelImageInput.files[0]) {
                const isProfile = panelTitle.textContent.includes('Profile');
                const targetInput = isProfile ? profileImageInput : coverImageInput;
                const targetPreview = isProfile ? profileImagePreview : coverImagePreview;

                // Transfer file to target input using DataTransfer
                const dataTransfer = new DataTransfer();
                dataTransfer.items.add(panelImageInput.files[0]);
                targetInput.files = dataTransfer.files;

                // Update target preview
                if (targetPreview && currentPreviewSrc) {
                    targetPreview.src = currentPreviewSrc;
                }
            }
            closePanel();
        });

        panelCancel.addEventListener('click', closePanel);
        panelCancelBtn.addEventListener('click', closePanel);
    });
</script>
}