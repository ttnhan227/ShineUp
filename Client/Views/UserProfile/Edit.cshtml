@model Client.Models.ProfileViewModel

@{
    ViewData["Title"] = "Edit Profile";
}

<div class="profile-container">
    <div class="row g-4">
        <!-- Left Sidebar -->
        <div class="col-md-3">
            <div class="profile-details-card h-100">
                <div class="card-header">
                    <h3><i class='bx bx-user-circle'></i> Profile Preview</h3>
                </div>
                <div class="card-body text-center">
                    <div class="preview-avatar mb-3 mx-auto position-relative">
                        <div class="image-overlay" data-bs-toggle="modal" data-bs-target="#profileImageModal">
                            <i class='bx bx-camera'></i> Change Profile Image
                        </div>
                        @if (!string.IsNullOrEmpty(Model.ProfileImageURL))
                        {
                            <img src="@Model.ProfileImageURL" alt="@Model.Username's profile image" id="profileImagePreview">
                        }
                        else
                        {
                            <div class="avatar-placeholder">
                                <i class='bx bx-user'></i>
                            </div>
                        }
                    </div>
                    <div class="profile-meta">
                        <h5 class="post-author">@Model.Username</h5>
                        @if (!string.IsNullOrEmpty(Model.TalentArea))
                        {
                            <span class="talent-badge">@Model.TalentArea</span>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="col-md-9">
            <div class="profile-details-card">
                <div class="card-header position-relative">
                    <h3><i class='bx bx-edit'></i> Edit Profile</h3>
                    <div class="cover-image-container" data-bs-toggle="modal" data-bs-target="#coverImageModal">
                        @if (!string.IsNullOrEmpty(Model.CoverPhotoUrl))
                        {
                            <img src="@Model.CoverPhotoUrl" alt="Cover photo" id="coverImagePreview">
                        }
                        else
                        {
                            <div class="cover-placeholder">No Cover Photo</div>
                        }
                        <div class="cover-overlay">
                            <i class='bx bx-camera'></i> Change Cover Photo
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    <form asp-action="Edit" method="post" enctype="multipart/form-data">
                        <div class="info-group mb-4">
                            <label asp-for="Username" class="form-label">
                                <i class='bx bx-user'></i> Username
                            </label>
                            <div class="info-value">@Model.Username</div>
                            <input type="hidden" asp-for="Username" />
                            <span asp-validation-for="Username" class="text-danger"></span>
                        </div>

                        <div class="info-group mb-4">
                            <label asp-for="FullName" class="form-label">
                                <i class='bx bx-user'></i> Full Name
                            </label>
                            <input asp-for="FullName" class="form-control post-input" />
                            <span asp-validation-for="FullName" class="text-danger"></span>
                        </div>

                        <div class="info-group mb-4">
                            <label asp-for="Email" class="form-label">
                                <i class='bx bx-envelope'></i> Email
                            </label>
                            <input asp-for="Email" class="form-control post-input" />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="info-group mb-4">
                            <label asp-for="Bio" class="form-label">
                                <i class='bx bx-info-circle'></i> Bio
                            </label>
                            <textarea asp-for="Bio" class="form-control post-input" rows="4"></textarea>
                            <span asp-validation-for="Bio" class="text-danger"></span>
                        </div>

                        <div class="info-group mb-4">
                            <label asp-for="TalentArea" class="form-label">
                                <i class='bx bx-star'></i> Talent Area
                            </label>
                            <input asp-for="TalentArea" class="form-control post-input" />
                            <span asp-validation-for="TalentArea" class="text-danger"></span>
                        </div>

                        <div class="info-group mb-4">
                            <label asp-for="ProfilePrivacy" class="form-label">
                                <i class='bx bx-lock-alt'></i> Profile Privacy
                            </label>
                            <select asp-for="ProfilePrivacy" class="custom-select">
                                <option value="0">Public</option>
                                <option value="1">Friends Only</option>
                                <option value="2">Private</option>
                            </select>
                            <span asp-validation-for="ProfilePrivacy" class="text-danger"></span>
                        </div>

                        <div class="info-group mb-4 d-none">
                            <input asp-for="ProfileImageFile" type="file" class="form-control" id="profileImageInput" accept="image/*" />
                            <span asp-validation-for="ProfileImageFile" class="text-danger"></span>
                        </div>

                        <div class="info-group mb-4 d-none">
                            <input asp-for="CoverPhotoFile" type="file" class="form-control" id="coverImageInput" accept="image/*" />
                            <span asp-validation-for="CoverPhotoFile" class="text-danger"></span>
                        </div>

                        <div class="info-group mb-4">
                            <label asp-for="InstagramUrl" class="form-label">
                                <i class='bx bxl-instagram'></i> Instagram URL
                            </label>
                            <input asp-for="InstagramUrl" class="form-control post-input" type="url" />
                            <span asp-validation-for="InstagramUrl" class="text-danger"></span>
                        </div>

                        <div class="info-group mb-4">
                            <label asp-for="YouTubeUrl" class="form-label">
                                <i class='bx bxl-youtube'></i> YouTube URL
                            </label>
                            <input asp-for="YouTubeUrl" class="form-control post-input" type="url" />
                            <span asp-validation-for="YouTubeUrl" class="text-danger"></span>
                        </div>

                        <div class="info-group mb-4">
                            <label asp-for="TwitterUrl" class="form-label">
                                <i class='bx bxl-twitter'></i> Twitter URL
                            </label>
                            <input asp-for="TwitterUrl" class="form-control post-input" type="url" />
                            <span asp-validation-for="TwitterUrl" class="text-danger"></span>
                        </div>

                        <div class="card-footer">
                            <button type="submit" class="btn btn-primary">
                                <i class='bx bx-save'></i> Save Changes
                            </button>
                            <a asp-action="PublicProfile" asp-route-username="@Model.Username" class="btn btn-secondary">
                                <i class='bx bx-x'></i> Cancel
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Profile Image Modal -->
<div class="modal fade" id="profileImageModal" tabindex="-1" aria-labelledby="profileImageModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="profileImageModalLabel">Change Profile Image</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="text-center mb-3">
                    <img id="profileModalPreview" src="@Model.ProfileImageURL" class="img-fluid" style="max-height: 200px;" alt="Profile preview">
                </div>
                <input type="file" class="form-control" id="profileImageModalInput" accept="image/*" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="profileImageSave">Save</button>
            </div>
        </div>
    </div>
</div>

<!-- Cover Image Modal -->
<div class="modal fade" id="coverImageModal" tabindex="-1" aria-labelledby="coverImageModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="coverImageModalLabel">Change Cover Photo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="text-center mb-3">
                    <img id="coverModalPreview" src="@Model.CoverPhotoUrl" class="img-fluid" style="max-height: 200px;" alt="Cover preview">
                </div>
                <input type="file" class="form-control" id="coverImageModalInput" accept="image/*" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="coverImageSave">Save</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link href='https://cdn.jsdelivr.net/npm/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <style>
        .preview-avatar {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            overflow: hidden;
            cursor: pointer;
            position: relative;
        }
        .preview-avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        .image-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.3s;
            flex-direction: column;
            font-size: 14px;
        }
        .preview-avatar:hover .image-overlay {
            opacity: 1;
        }
        .cover-image-container {
            width: 100%;
            height: 200px;
            position: relative;
            overflow: hidden;
            cursor: pointer;
            margin-top: 20px;
        }
        .cover-image-container img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        .cover-placeholder {
            width: 100%;
            height: 100%;
            background: #f0f0f0;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #666;
        }
        .cover-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.3s;
            flex-direction: column;
            font-size: 14px;
        }
        .cover-image-container:hover .cover-overlay {
            opacity: 1;
        }
    </style>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Profile Image Preview
            const profileModalInput = document.getElementById('profileImageModalInput');
            const profileModalPreview = document.getElementById('profileModalPreview');
            const profileImageInput = document.getElementById('profileImageInput');
            const profileImagePreview = document.getElementById('profileImagePreview');

            profileModalInput.addEventListener('change', function (e) {
                const file = e.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        profileModalPreview.src = e.target.result;
                        if (profileImagePreview) {
                            profileImagePreview.src = e.target.result;
                        }
                    };
                    reader.readAsDataURL(file);
                }
            });

            document.getElementById('profileImageSave').addEventListener('click', function () {
                if (profileModalInput.files[0]) {
                    profileImageInput.files = profileModalInput.files;
                }
                $('#profileImageModal').modal('hide');
            });

            // Cover Image Preview
            const coverModalInput = document.getElementById('coverImageModalInput');
            const coverModalPreview = document.getElementById('coverModalPreview');
            const coverImageInput = document.getElementById('coverImageInput');
            const coverImagePreview = document.getElementById('coverImagePreview');

            coverModalInput.addEventListener('change', function (e) {
                const file = e.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        coverModalPreview.src = e.target.result;
                        if (coverImagePreview) {
                            coverImagePreview.src = e.target.result;
                        }
                    };
                    reader.readAsDataURL(file);
                }
            });

            document.getElementById('coverImageSave').addEventListener('click', function () {
                if (coverModalInput.files[0]) {
                    coverImageInput.files = coverModalInput.files;
                }
                $('#coverImageModal').modal('hide');
            });
        });
    </script>
}