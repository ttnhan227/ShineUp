@model Client.Models.CommunityDetailsViewModel
@{
    ViewData["Title"] = "Chi tiết cộng đồng";
    string role = ViewBag.UserRole as string ?? "None";
    int currentUserId = (int)ViewBag.CurrentUserId;
    
    // Debug information - remove after testing
    <div class="alert alert-info d-none" id="debugInfo">
        <h5>Debug Information</h5>
        <hr />
        <div class="row">
            <div class="col-md-6">
                <h6>User Information</h6>
                <p><strong>User ID:</strong> @currentUserId</p>
                <p><strong>User Role:</strong> @(role ?? "null")</p>
                <p><strong>Is Admin:</strong> @(role == "Admin" ? "Yes" : "No")</p>
                <p><strong>Is Authenticated:</strong> @User.Identity.IsAuthenticated</p>
                <p><strong>Username:</strong> @User.Identity.Name</p>
            </div>
            <div class="col-md-6">
                <h6>Community Information</h6>
                <p><strong>Community ID:</strong> @Model.Community.CommunityID</p>
                <p><strong>Cover Image URL:</strong> @(string.IsNullOrEmpty(Model.Community.CoverImageUrl) ? "Not set" : "Set")</p>
                <p><strong>Member Count:</strong> @(Model.Members?.Count ?? 0)</p>
                @if (Model.Members != null && Model.Members.Any())
                {
                    <div class="mt-2">
                        <h6>Members (@Model.Members.Count):</h6>
                        <ul class="list-unstyled">
                            @foreach (var member in Model.Members)
                            {
                                <li>
                                    @member.UserID - @member.User?.Username 
                                    <span class="badge @(member.Role == CommunityRole.Admin ? "bg-danger" : "bg-secondary")">
                                        @member.Role
                                    </span>
                                    @if (member.UserID == currentUserId)
                                    {
                                        <span class="badge bg-info">Current User</span>
                                    }
                                </li>
                            }
                        </ul>
                    </div>
                }
            </div>
        </div>
        <div class="mt-3">
            <button class="btn btn-sm btn-outline-secondary" onclick="copyDebugInfo()">
                <i class="fas fa-copy me-1"></i> Copy Debug Info
            </button>
        </div>
    </div>
    
    <style>
        #debugInfo {
            position: fixed;
            bottom: 20px;
            right: 20px;
            max-width: 800px;
            max-height: 80vh;
            overflow-y: auto;
            z-index: 9999;
            box-shadow: 0 0 15px rgba(0,0,0,0.2);
        }
    </style>
    
    <script>
        function copyDebugInfo() {
            const debugInfo = document.getElementById('debugInfo');
            const range = document.createRange();
            range.selectNode(debugInfo);
            window.getSelection().removeAllRanges();
            window.getSelection().addRange(range);
            document.execCommand('copy');
            window.getSelection().removeAllRanges();
            
            // Show feedback
            const button = event.target.closest('button');
            const originalText = button.innerHTML;
            button.innerHTML = '<i class="fas fa-check me-1"></i> Copied!';
            setTimeout(() => {
                button.innerHTML = originalText;
            }, 2000);
        }
    </script>
}

<div class="container">
    <div class="row mb-4">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Community")">Cộng đồng</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@Model.Community.Name</li>
                </ol>
            </nav>
            
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            
            <div class="card mb-4">
                <div class="card-header bg-light">
                    <div class="d-flex justify-content-between align-items-center">
                        <h2 class="h4 mb-0">@Model.Community.Name</h2>
                        @if (role == "Admin")
                        {
                            <span class="badge bg-success">Quản trị viên</span>
                        }
                        else if (role == "Member")
                        {
                            <span class="badge bg-primary">Thành viên</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">Chưa tham gia</span>
                        }
                    </div>
                </div>
                @if (!string.IsNullOrEmpty(Model.Community.CoverImageUrl))
                {
                    var imageUrl = Model.Community.CoverImageUrl.StartsWith("http") 
                        ? Model.Community.CoverImageUrl 
                        : $"{Context.Request.Scheme}://{Context.Request.Host}{Model.Community.CoverImageUrl}";
                    <div class="community-cover-image" style="height: 200px; overflow: hidden; background-size: cover; background-position: center; background-image: url('@imageUrl')">
                    </div>
                }
                <div class="card-body">
                    <p class="card-text">@(string.IsNullOrEmpty(Model.Community.Description) ? "Chưa có mô tả." : Model.Community.Description)</p>
                    <div class="text-muted small">
                        <div><i class="far fa-calendar-alt me-2"></i> Ngày tạo: @Model.Community.CreatedAt.ToString("dd/MM/yyyy")</div>
                        @if (Model.Community.UpdatedAt.HasValue)
                        {
                            <div><i class="far fa-edit me-2"></i> Cập nhật lần cuối: @Model.Community.UpdatedAt.Value.ToString("dd/MM/yyyy")</div>
                        }
                    </div>
                </div>
                <div class="card-footer bg-transparent">
                    @if (role == "Admin")
                    {
                        <div class="d-flex justify-content-between align-items-center">
                            <span class="text-success"><i class="fas fa-shield-alt me-2"></i>Bạn là quản trị viên của cộng đồng này</span>
                            <div>
                                <a asp-action="Edit" asp-route-communityId="@Model.Community.CommunityID" class="btn btn-outline-primary btn-sm me-2">
                                    <i class="fas fa-edit me-1"></i> Chỉnh sửa
                                </a>
                            </div>
                        </div>
                    }
                    else if (role == "Member")
                    {
                        <form method="post" asp-action="Leave" asp-route-communityId="@Model.Community.CommunityID" class="d-inline">
                            <button type="submit" class="btn btn-outline-danger" 
                                    onclick="return confirm('Bạn có chắc muốn rời khỏi cộng đồng này?');">
                                <i class="fas fa-sign-out-alt me-1"></i> Rời khỏi cộng đồng
                            </button>
                        </form>
                    }
                    else
                    {
                        <form method="post" asp-action="Join" asp-route-communityId="@Model.Community.CommunityID" class="d-inline">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-user-plus me-1"></i> Tham gia cộng đồng
                            </button>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-light">
                    <h3 class="h5 mb-0">
                        <i class="fas fa-users me-2"></i>Thành viên
                        <span class="badge bg-primary rounded-pill">@Model.Members.Count</span>
                    </h3>
                </div>
                <div class="card-body p-0">
                    @{
                        ViewBag.CurrentUserId = currentUserId;
                        ViewBag.UserRole = role;
                    }
                    @await Html.PartialAsync("_CommunityMemberListPartial", Model.Members)
                </div>
            </div>
        </div>
    </div>
    
    <!-- Debug toggle -->
    <script>
        document.addEventListener('keydown', function(e) {
            // Show debug info when pressing Ctrl+Shift+D
            if (e.ctrlKey && e.shiftKey && e.key === 'D') {
                const debugInfo = document.getElementById('debugInfo');
                if (debugInfo) {
                    debugInfo.classList.toggle('d-none');
                }
            }
        });
    </script>
</div>

@section Styles {
    <style>
        .card {
            border: none;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            transition: transform 0.2s ease-in-out;
        }
        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }
        .card-header {
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        }
        .badge {
            font-weight: 500;
            letter-spacing: 0.5px;
        }
        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }
        .btn i {
            font-size: 0.9em;
        }
    </style>
}