@model Client.Models.ConfirmOTPViewModel

<div class="login-container">
    <div class="login-box">
        <div class="login-header">
            <h2>Enter Reset Code</h2>
            <p>Please enter the code sent to your email: @Model.Email</p>
        </div>

        <form asp-controller="Auth" asp-action="ConfirmOTP" method="post" class="login-form">
            <input type="hidden" asp-for="Email" />
            <div class="form-group">
                <label asp-for="OTP">Reset Code</label>
                <div class="input-group">
                    <i class="fas fa-key"></i>
                    <input asp-for="OTP" class="form-control" placeholder="Enter reset code" required />
                </div>
                <span asp-validation-for="OTP" class="text-danger"></span>
            </div>
            <div class="button-group">
                <button type="submit" class="btn btn-primary btn-block mb-2">Verify Code</button>
                <button type="button" id="resendBtn" class="btn btn-primary btn-outline-primary btn-block" style="background-color: transparent; color: #007bff; border-color: #007bff;" onclick="resendCode()">
                    Resend Code <span id="timer" class="d-none">(60s)</span>
                </button>
            </div>
            <div class="text-center mt-3">
                <a asp-controller="Auth" asp-action="Login">Back to Login</a>
            </div>
        </form>
    </div>
</div>

<div id="loadingOverlay" class="loading-overlay d-none">
    <div class="spinner-border text-primary" role="status">
        <span class="sr-only">Loading...</span>
    </div>
    <p id="loadingMessage" class="mt-2">Verifying...</p>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <style>
        .login-container {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            padding: 20px;
        }

        .login-box {
            background: white;
            padding: 40px;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 400px;
        }

        .login-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .login-header h2 {
            color: #333;
            margin-bottom: 10px;
        }

        .login-header p {
            color: #666;
            font-size: 0.9rem;
        }

        .login-form .form-group {
            margin-bottom: 20px;
        }

        .login-form .input-group {
            position: relative;
        }

        .login-form .input-group i {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #666;
        }

        .login-form .form-control {
            padding-left: 40px;
            border-radius: 5px;
            border: 1px solid #ddd;
            height: 45px;
        }

        .login-form .btn-block {
            height: 45px;
            font-size: 16px;
            background: #007bff;
            border: none;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

        .login-form .btn-block:hover {
            background: #0056b3;
        }

        .divider {
            text-align: center;
            margin: 20px 0;
            position: relative;
        }

        .divider::before,
        .divider::after {
            content: "";
            position: absolute;
            top: 50%;
            width: 45%;
            height: 1px;
            background-color: #ddd;
        }

        .divider::before {
            left: 0;
        }

        .divider::after {
            right: 0;
        }

        .divider span {
            background: white;
            padding: 0 10px;
            color: #666;
            font-size: 0.9rem;
        }

        .google-signin {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

        .text-center {
            text-align: center;
            margin-top: 20px;
        }

        .text-center a {
            color: #007bff;
            text-decoration: none;
        }

        .text-center a:hover {
            text-decoration: underline;
        }

        .alert {
            border-radius: 5px;
            padding: 15px;
        }

        .alert i {
            margin-right: 10px;
        }

        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.9);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .d-none {
            display: none !important;
        }

        .text-danger {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 0.25rem;
            display: block;
        }
        
        .input-validation-error {
            border-color: #dc3545;
        }

        .button-group {
            display: flex;
            flex-direction: column;
            gap: 10px;
            margin-bottom: 20px;
        }

        .button-group button {
            width: 100%;
            margin: 0;
        }

        /* Add these styles for the resend button */
        .btn-outline-primary:hover {
            color: white !important;
            background-color: #0056b3 !important;
            border-color: #0056b3 !important;
        }

        .btn-outline-primary:disabled {
            background-color: transparent !important;
            color: #6c757d !important;
            border-color: #6c757d !important;
        }

        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.9);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .d-none {
            display: none !important;
        }
    </style>
    <script>
        // Add form submission handler
        document.querySelector('.login-form').addEventListener('submit', function(e) {
            e.preventDefault();
            showLoading('Verifying code...');
            this.submit();
        });

        function showLoading(message) {
            const overlay = document.getElementById('loadingOverlay');
            const messageEl = document.getElementById('loadingMessage');
            messageEl.textContent = message;
            overlay.classList.remove('d-none');
        }

        let countdown = 0;
        let timerId = null;

        function startTimer() {
            const btn = document.getElementById('resendBtn');
            const timerSpan = document.getElementById('timer');
            btn.disabled = true;
            countdown = 60;
            timerSpan.classList.remove('d-none');

            timerId = setInterval(() => {
                countdown--;
                timerSpan.textContent = `(${countdown}s)`;
                
                if (countdown <= 0) {
                    clearInterval(timerId);
                    btn.disabled = false;
                    timerSpan.classList.add('d-none');
                }
            }, 1000);
        }

        function resendCode() {
            showLoading('Resending code...');
            fetch('/Auth/ResendOTP', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ email: '@Model.Email' })
            })
            .then(response => response.json())
            .then(data => {
                document.getElementById('loadingOverlay').classList.add('d-none'); // Hide loading after response
                if (data.success) {
                    toastr.success('New code has been sent to your email');
                    startTimer();
                } else {
                    toastr.error(data.message || 'Failed to resend code');
                }
            })
            .catch(() => {
                document.getElementById('loadingOverlay').classList.add('d-none'); // Hide loading on error
                toastr.error('Failed to resend code');
            });
        }

        // Start timer if coming back from a resend
        if (@Json.Serialize(TempData["ResendOTP"] ?? false)) {
            startTimer();
        }
    </script>
}
