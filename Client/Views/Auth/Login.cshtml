@model LoginViewModel
@inject IConfiguration Configuration
@{
    ViewData["Title"] = "Login";
}

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <div class="text-center mb-4">
                        <h4 class="card-title">Welcome Back</h4>
                        <p class="text-muted">Please login to continue</p>
                    </div>

                    <form asp-controller="Auth" asp-action="Login" asp-route-returnurl="@ViewBag.ReturnUrl"
                          method="post" class="login-form" id="loginForm">
                        <div asp-validation-summary="ModelOnly" class="validation-summary-errors"></div>
                        <div class="form-group mb-4">
                            <label asp-for="Email" class="form-label">
                                <i class="bx bx-envelope"></i> Email
                            </label>
                            <div class="input-group">
                                <input asp-for="Email" class="form-control" placeholder="Enter your email" required/>
                            </div>
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-4">
                            <label asp-for="Password" class="form-label">
                                <i class="bx bx-lock-alt"></i> Password
                            </label>
                            <div class="input-group">
                                <input asp-for="Password" class="form-control" type="password"
                                       placeholder="Enter your password" required/>
                            </div>
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>

                        <div class="button-group">
                            <button type="submit" class="btn btn-primary">
                                <i class="bx bx-log-in"></i> Sign In
                            </button>
                        </div>

                        <div class="text-center mt-3">
                            <a asp-controller="Auth" asp-action="ForgotPassword" class="text-primary">
                                <i class="bx bx-help-circle"></i> Forgot your password?
                            </a>
                        </div>
                    </form>

                    <div class="divider">
                        <span>OR</span>
                    </div>

                    <div class="google-signin">
                        <div id="g_id_onload"
                             data-client_id="@Configuration["Authentication:Google:ClientId"]"
                             data-context="signin"
                             data-callback="handleCredentialResponse">
                        </div>
                        <div class="g_id_signin"
                             data-type="standard"
                             data-size="large"
                             data-theme="outline"
                             data-text="sign_in_with"
                             data-shape="rectangular"
                             data-logo_alignment="left">
                        </div>
                    </div>

                    <div class="text-center mt-4">
                        <p class="text-muted mb-0">Don't have an account?
                            <a asp-controller="Auth" asp-action="Register" asp-route-returnurl="@ViewBag.ReturnUrl"
                               class="text-primary">Register</a>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="loadingOverlay" class="loading-overlay d-none">
    <div class="spinner-border text-primary" role="status">
        <span class="sr-only">Loading...</span>
    </div>
    <p id="loadingMessage" class="mt-2">Authenticating...</p>
</div>

@if (!string.IsNullOrEmpty(ViewBag.Token))
{
    <script>
        console.log("JWT Token: @ViewBag.Token");
    </script>
}

@section Scripts {
    <link href="https://cdn.jsdelivr.net/npm/boxicons@1.9.2/css/boxicons.min.css" rel="stylesheet">
    <link href="~/css/auth.css" rel="stylesheet">
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://accounts.google.com/gsi/client" async></script>
    <script>
        // Add form submission handler
        document.getElementById('loginForm').addEventListener('submit', function (e) {
            e.preventDefault();
            showLoading('Authenticating...');
            this.submit();
        });

        function showLoading(message) {
            const overlay = document.getElementById('loadingOverlay');
            const messageEl = document.getElementById('loadingMessage');
            messageEl.textContent = message;
            overlay.classList.remove('d-none');
        }

        function handleCredentialResponse(response) {
            if (response.credential) {
                showLoading('Authenticating with Google...');
                fetch('/Auth/google-auth', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({idToken: response.credential})
                })
                    .then(async response => {
                        const text = await response.text();
                        console.log('Server response:', text);

                        if (!response.ok) {
                            throw new Error(text);
                        }

                        const data = JSON.parse(text);

                        if (data.needsPassword) {
                            // Redirect to profile completion page with the necessary parameters
                            const url = new URL('/Auth/CompleteProfile', window.location.origin);
                            url.searchParams.append('userId', data.userId);
                            url.searchParams.append('email', data.email);
                            if (data.username) url.searchParams.append('username', data.username);
                            if (data.fullName) url.searchParams.append('fullName', data.fullName);

                            window.location.href = url.toString();
                        } else if (data.token) {
                            // Save the token in localStorage
                            localStorage.setItem('authToken', data.token);

                            // Set a flag to indicate successful login
                            sessionStorage.setItem('justLoggedIn', 'true');

                            // Redirect to home
                            showLoading('Success! Redirecting you to home...');
                            setTimeout(() => {
                                window.location.href = '/';
                            }, 1000);
                        } else {
                            throw new Error(data.message || 'Authentication failed');
                        }
                    })
                    .catch(error => {
                        console.error('Auth error:', error);
                        alert('Login failed: ' + error.message);
                        document.getElementById('loadingOverlay').classList.add('d-none');
                    });
            }
        }
    </script>
}