(function (userId) {
    'use strict';

    const currentUserId = userId || 'anonymous';
    const chatStorageKey = `chatbot-history-${currentUserId}`;

    document.addEventListener('DOMContentLoaded', () => {
        const chatToggleBtn = document.getElementById("chatbot-toggle");
        const chatBox = document.getElementById("chatbot-box");
        const chatMessages = document.getElementById("chat-messages");
        const chatLoading = document.getElementById("chat-loading");
        const userInput = document.getElementById("user-input");
        const sendBtn = document.getElementById("send-btn");

        // G·∫Øn s·ª± ki·ªán
        chatToggleBtn?.addEventListener("click", toggleChatbot);
        sendBtn?.addEventListener("click", sendMessage);
        userInput?.addEventListener("keypress", e => {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                sendMessage();
            }
        });

        // T·∫£i l·ªãch s·ª≠ chat khi m·ªü
        loadChatHistory();

        function toggleChatbot() {
            if (chatBox.style.display === 'none' || chatBox.style.display === '') {
                chatBox.style.display = 'flex';
                loadChatHistory();
                userInput.focus();
            } else {
                chatBox.style.display = 'none';
            }
        }

        async function sendMessage() {
            const message = userInput.value.trim();
            if (!message) return;

            appendMessage(message, 'user');
            saveMessage(message, 'user');
            userInput.value = '';
            userInput.disabled = true;
            sendBtn.disabled = true;
            chatLoading.style.display = 'block';

            try {
                const response = await fetch('/ChatBot/Ask', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({message: message})
                });

                if (!response.ok) throw new Error('L·ªói k·∫øt n·ªëi t·ªõi chatbot.');

                const data = await response.json();
                const reply = data.reply || 'Kh√¥ng c√≥ ph·∫£n h·ªìi.';
                appendMessage(reply, 'bot');
                saveMessage(reply, 'bot');
            } catch (error) {
                console.error(error);
                appendMessage('‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn chatbot.', 'bot');
                saveMessage('‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn chatbot.', 'bot');
            } finally {
                chatLoading.style.display = 'none';
                userInput.disabled = false;
                sendBtn.disabled = false;
                userInput.focus();
            }
        }

        function appendMessage(text, type) {
            const msgDiv = document.createElement('div');
            msgDiv.className = type === 'user' ? 'user-message' : 'bot-message';
            msgDiv.textContent = text;
            chatMessages.appendChild(msgDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        function saveMessage(text, type) {
            try {
                const history = JSON.parse(sessionStorage.getItem(chatStorageKey)) || [];
                history.push({text, type, timestamp: new Date().toISOString()});

                // Gi·ªõi h·∫°n t·ªëi ƒëa 100 tin nh·∫Øn
                if (history.length > 100) {
                    history.splice(0, history.length - 100);
                }

                sessionStorage.setItem(chatStorageKey, JSON.stringify(history));
            } catch (e) {
                console.error('Kh√¥ng th·ªÉ l∆∞u v√†o sessionStorage:', e);
            }
        }

        function loadChatHistory() {
            chatMessages.innerHTML = '';

            try {
                const history = JSON.parse(sessionStorage.getItem(chatStorageKey)) || [];
                if (history.length === 0) {
                    appendMessage('üëã Ch√†o b·∫°n! T√¥i c√≥ th·ªÉ gi√∫p g√¨?', 'bot');
                    return;
                }

                for (const msg of history) {
                    appendMessage(msg.text, msg.type);
                }
            } catch (e) {
                console.error('Kh√¥ng th·ªÉ t·∫£i t·ª´ sessionStorage:', e);
                appendMessage('üëã Ch√†o b·∫°n! T√¥i c√≥ th·ªÉ gi√∫p g√¨?', 'bot');
            }
        }

        // H√†m global ƒë·ªÉ x√≥a l·ªãch s·ª≠ trong tab hi·ªán t·∫°i
        window.clearCurrentChat = function () {
            if (confirm('B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a to√†n b·ªô l·ªãch s·ª≠ chat trong tab n√†y?')) {
                sessionStorage.removeItem(chatStorageKey);
                chatMessages.innerHTML = '';
                appendMessage('üëã Ch√†o b·∫°n! T√¥i c√≥ th·ªÉ gi√∫p g√¨?', 'bot');
            }
        };
    });

})(window.ChatBotUserId);
