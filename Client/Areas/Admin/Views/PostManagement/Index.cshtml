@model IEnumerable<Client.Areas.Admin.Models.PostViewModel>
@{
    ViewData["Title"] = "Post Management";
}

<div class="container-fluid">
    <div class="row">
        <!-- Main Content -->
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h2 class="mb-4">Post Management</h2>

                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-light">
                            <tr>
                                <th>ID</th>
                                <th>Title</th>
                                <th>Author</th>
                                <th>Category</th>
                                <th>Privacy</th>
                                <th>Community</th>
                                <th>Comments</th>
                                <th>Likes</th>
                                <th>Created</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                            </thead>
                            <tbody>
                            @if (Model != null && Model.Any())
                            {
                                foreach (var post in Model)
                                {
                                    <tr>
                                        <td>@post.PostID</td>
                                        <td>@(post.Title.Length > 30 ? post.Title.Substring(0, 30) + "..." : post.Title)</td>
                                        <td>@post.UserName</td>
                                        <td>@(post.CategoryName ?? "-")</td>
                                        <td>@(post.PrivacyName ?? "-")</td>
                                        <td>@(post.CommunityName ?? "-")</td>
                                        <td>@post.CommentCount</td>
                                        <td>@post.LikeCount</td>
                                        <td>@post.CreatedAt.ToString("dd MMM yyyy")</td>
                                        <td>
                                            <div class="form-check form-switch">
                                                <input class="form-check-input" type="checkbox"
                                                       id="isActive_@post.PostID"
                                                       @(post.IsActive ? "checked" : "")
                                                       onchange="updatePostStatus(@post.PostID, this.checked)">
                                                <label class="form-check-label" for="isActive_@post.PostID">
                                                    @(post.IsActive ? "Active" : "Inactive")
                                                </label>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="button-group">
                                                <a asp-action="Details" asp-route-id="@post.PostID"
                                                   class="btn btn-primary btn-sm">
                                                    <i class='bx bx-detail'></i> Details
                                                </a>
                                                <button type="button" class="btn btn-danger btn-sm"
                                                        onclick="confirmDelete(@post.PostID, '@post.Title')">
                                                    <i class='bx bx-trash'></i> Delete
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="11" class="text-center">No posts found</td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the post "<span id="postTitle"></span>"?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" style="display: inline-block;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link href="https://cdn.jsdelivr.net/npm/boxicons@1.9.2/css/boxicons.min.css" rel="stylesheet">
    <link href="~/admin/assets/css/admin.css" rel="stylesheet"/>

    <script>
        function updatePostStatus(postId, isActive) {
            fetch(`/Admin/PostManagement/UpdateStatus/${postId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify(isActive)
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    window.location.reload();
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while updating the post status.');
                    window.location.reload();
                });
        }

        function confirmDelete(postId, postTitle) {
            document.getElementById('postTitle').textContent = postTitle;
            const form = document.getElementById('deleteForm');
            form.action = `/Admin/PostManagement/Delete/${postId}`;

            const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }
    </script>
}
